{"{\"assumptions\":{},\"sourceRoot\":\"/home/serge/blockchain-lab2/lab6/features/support/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/serge/blockchain-lab2/lab6\",\"filename\":\"/home/serge/blockchain-lab2/lab6/features/support/hooks.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/serge/blockchain-lab2/lab6\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-explicit-resource-management\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"BlockStatement\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regexp-modifiers\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$3\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$4\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$5\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$6\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$7\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$8\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$9\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$10\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$11\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$12\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$16\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$17\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.28.0:development":{"value":{"code":"\"use strict\";\n\nconst {\n  Before,\n  After\n} = require('@cucumber/cucumber');\nconst {\n  ethers\n} = require('ethers');\nconst {\n  loadArtifact\n} = require('../../helpers');\n\n// Глобальный объект для управления nonce\nconst nonceManager = {};\nBefore({\n  tags: '@educhain'\n}, async function () {\n  // Инициализация провайдера - FIX для ethers v6\n  this.provider = new ethers.JsonRpcProvider();\n\n  // Инициализация аккаунтов\n  const privateKeys = [\"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\", \"0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d\", \"0x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a\", \"0x7c852118294e51e653712a81e05800f419141751be58f605c371e15141b007a6\", \"0x47e179ec197488593b187f80a00eb0da91f1b9d0b13f8733639f19c30a34926a\"];\n  this.signers = privateKeys.map(key => new ethers.Wallet(key, this.provider));\n\n  // Инициализация nonce\n  for (const signer of this.signers) {\n    nonceManager[signer.address] = await this.provider.getTransactionCount(signer.address);\n  }\n\n  // Назначение ролей\n  [this.admin, this.alice, this.bob, this.carol, this.dave] = this.signers;\n\n  // Загрузка и деплой контракта\n  const {\n    abi,\n    bytecode\n  } = await loadArtifact('EDUToken');\n  const factory = new ethers.ContractFactory(abi, bytecode, this.admin);\n  this.stakingContract = await factory.deploy();\n  await this.stakingContract.waitForDeployment();\n  this.stakingContractAddress = await this.stakingContract.getAddress();\n\n  // Инициализация ролей\n  this.STUDENT_ROLE = await this.stakingContract.STUDENT_ROLE();\n  this.PROFESSOR_ROLE = await this.stakingContract.PROFESSOR_ROLE();\n  this.ADMIN_ROLE = await this.stakingContract.DEFAULT_ADMIN_ROLE();\n\n  // Добавим развертывание NFT контракта\n  const {\n    abi: nftAbi,\n    bytecode: nftBytecode\n  } = await loadArtifact('AchievementNFT');\n  const nftFactory = new ethers.ContractFactory(nftAbi, nftBytecode, this.admin);\n  this.nftContract = await nftFactory.deploy();\n  await this.nftContract.waitForDeployment();\n  this.nftContractAddress = await this.nftContract.getAddress();\n  console.log(`EduchainStaking deployed to: ${this.stakingContractAddress}`);\n  console.log(`AchievementNFT deployed to: ${this.nftContractAddress}`);\n});\nAfter({\n  tags: '@educhain'\n}, async function () {\n  // Очистка состояния после сценариев\n  delete this.stakingContract;\n  delete this.nftContract;\n  delete this.signers;\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCZWZvcmUiLCJBZnRlciIsInJlcXVpcmUiLCJldGhlcnMiLCJsb2FkQXJ0aWZhY3QiLCJub25jZU1hbmFnZXIiLCJ0YWdzIiwicHJvdmlkZXIiLCJKc29uUnBjUHJvdmlkZXIiLCJwcml2YXRlS2V5cyIsInNpZ25lcnMiLCJtYXAiLCJrZXkiLCJXYWxsZXQiLCJzaWduZXIiLCJhZGRyZXNzIiwiZ2V0VHJhbnNhY3Rpb25Db3VudCIsImFkbWluIiwiYWxpY2UiLCJib2IiLCJjYXJvbCIsImRhdmUiLCJhYmkiLCJieXRlY29kZSIsImZhY3RvcnkiLCJDb250cmFjdEZhY3RvcnkiLCJzdGFraW5nQ29udHJhY3QiLCJkZXBsb3kiLCJ3YWl0Rm9yRGVwbG95bWVudCIsInN0YWtpbmdDb250cmFjdEFkZHJlc3MiLCJnZXRBZGRyZXNzIiwiU1RVREVOVF9ST0xFIiwiUFJPRkVTU09SX1JPTEUiLCJBRE1JTl9ST0xFIiwiREVGQVVMVF9BRE1JTl9ST0xFIiwibmZ0QWJpIiwibmZ0Qnl0ZWNvZGUiLCJuZnRGYWN0b3J5IiwibmZ0Q29udHJhY3QiLCJuZnRDb250cmFjdEFkZHJlc3MiLCJjb25zb2xlIiwibG9nIl0sInNvdXJjZVJvb3QiOiIvaG9tZS9zZXJnZS9ibG9ja2NoYWluLWxhYjIvbGFiNi9mZWF0dXJlcy9zdXBwb3J0LyIsInNvdXJjZXMiOlsiaG9va3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBCZWZvcmUsIEFmdGVyIH0gPSByZXF1aXJlKCdAY3VjdW1iZXIvY3VjdW1iZXInKTtcclxuY29uc3QgeyBldGhlcnMgfSA9IHJlcXVpcmUoJ2V0aGVycycpO1xyXG5jb25zdCB7IGxvYWRBcnRpZmFjdCB9ID0gcmVxdWlyZSgnLi4vLi4vaGVscGVycycpO1xyXG5cclxuLy8g0JPQu9C+0LHQsNC70YzQvdGL0Lkg0L7QsdGK0LXQutGCINC00LvRjyDRg9C/0YDQsNCy0LvQtdC90LjRjyBub25jZVxyXG5jb25zdCBub25jZU1hbmFnZXIgPSB7fTtcclxuXHJcbkJlZm9yZSh7IHRhZ3M6ICdAZWR1Y2hhaW4nIH0sIGFzeW5jIGZ1bmN0aW9uICgpIHtcclxuICAvLyDQmNC90LjRhtC40LDQu9C40LfQsNGG0LjRjyDQv9GA0L7QstCw0LnQtNC10YDQsCAtIEZJWCDQtNC70Y8gZXRoZXJzIHY2XHJcbiAgdGhpcy5wcm92aWRlciA9IG5ldyBldGhlcnMuSnNvblJwY1Byb3ZpZGVyKCk7XHJcbiAgXHJcbiAgLy8g0JjQvdC40YbQuNCw0LvQuNC30LDRhtC40Y8g0LDQutC60LDRg9C90YLQvtCyXHJcbiAgY29uc3QgcHJpdmF0ZUtleXMgPSBbXHJcbiAgICBcIjB4YWMwOTc0YmVjMzlhMTdlMzZiYTRhNmI0ZDIzOGZmOTQ0YmFjYjQ3OGNiZWQ1ZWZjYWU3ODRkN2JmNGYyZmY4MFwiLFxyXG4gICAgXCIweDU5YzY5OTVlOTk4Zjk3YTVhMDA0NDk2NmYwOTQ1Mzg5ZGM5ZTg2ZGFlODhjN2E4NDEyZjQ2MDNiNmI3ODY5MGRcIixcclxuICAgIFwiMHg1ZGU0MTExYWZhMWE0Yjk0OTA4ZjgzMTAzZWIxZjE3MDYzNjdjMmU2OGNhODcwZmMzZmI5YTgwNGNkYWIzNjVhXCIsXHJcbiAgICBcIjB4N2M4NTIxMTgyOTRlNTFlNjUzNzEyYTgxZTA1ODAwZjQxOTE0MTc1MWJlNThmNjA1YzM3MWUxNTE0MWIwMDdhNlwiLFxyXG4gICAgXCIweDQ3ZTE3OWVjMTk3NDg4NTkzYjE4N2Y4MGEwMGViMGRhOTFmMWI5ZDBiMTNmODczMzYzOWYxOWMzMGEzNDkyNmFcIlxyXG4gIF07XHJcblxyXG4gIHRoaXMuc2lnbmVycyA9IHByaXZhdGVLZXlzLm1hcChrZXkgPT4gbmV3IGV0aGVycy5XYWxsZXQoa2V5LCB0aGlzLnByb3ZpZGVyKSk7XHJcbiAgXHJcbiAgLy8g0JjQvdC40YbQuNCw0LvQuNC30LDRhtC40Y8gbm9uY2VcclxuICBmb3IgKGNvbnN0IHNpZ25lciBvZiB0aGlzLnNpZ25lcnMpIHtcclxuICAgIG5vbmNlTWFuYWdlcltzaWduZXIuYWRkcmVzc10gPSBhd2FpdCB0aGlzLnByb3ZpZGVyLmdldFRyYW5zYWN0aW9uQ291bnQoc2lnbmVyLmFkZHJlc3MpO1xyXG4gIH1cclxuXHJcbiAgLy8g0J3QsNC30L3QsNGH0LXQvdC40LUg0YDQvtC70LXQuVxyXG4gIFt0aGlzLmFkbWluLCB0aGlzLmFsaWNlLCB0aGlzLmJvYiwgdGhpcy5jYXJvbCwgdGhpcy5kYXZlXSA9IHRoaXMuc2lnbmVycztcclxuXHJcbiAgLy8g0JfQsNCz0YDRg9C30LrQsCDQuCDQtNC10L/Qu9C+0Lkg0LrQvtC90YLRgNCw0LrRgtCwXHJcbiAgY29uc3QgeyBhYmksIGJ5dGVjb2RlIH0gPSBhd2FpdCBsb2FkQXJ0aWZhY3QoJ0VEVVRva2VuJyk7XHJcbiAgY29uc3QgZmFjdG9yeSA9IG5ldyBldGhlcnMuQ29udHJhY3RGYWN0b3J5KGFiaSwgYnl0ZWNvZGUsIHRoaXMuYWRtaW4pO1xyXG4gIHRoaXMuc3Rha2luZ0NvbnRyYWN0ID0gYXdhaXQgZmFjdG9yeS5kZXBsb3koKTtcclxuICBhd2FpdCB0aGlzLnN0YWtpbmdDb250cmFjdC53YWl0Rm9yRGVwbG95bWVudCgpO1xyXG4gIHRoaXMuc3Rha2luZ0NvbnRyYWN0QWRkcmVzcyA9IGF3YWl0IHRoaXMuc3Rha2luZ0NvbnRyYWN0LmdldEFkZHJlc3MoKTtcclxuXHJcbiAgLy8g0JjQvdC40YbQuNCw0LvQuNC30LDRhtC40Y8g0YDQvtC70LXQuVxyXG4gIHRoaXMuU1RVREVOVF9ST0xFID0gYXdhaXQgdGhpcy5zdGFraW5nQ29udHJhY3QuU1RVREVOVF9ST0xFKCk7XHJcbiAgdGhpcy5QUk9GRVNTT1JfUk9MRSA9IGF3YWl0IHRoaXMuc3Rha2luZ0NvbnRyYWN0LlBST0ZFU1NPUl9ST0xFKCk7XHJcbiAgdGhpcy5BRE1JTl9ST0xFID0gYXdhaXQgdGhpcy5zdGFraW5nQ29udHJhY3QuREVGQVVMVF9BRE1JTl9ST0xFKCk7XHJcbiAgXHJcbiAgLy8g0JTQvtCx0LDQstC40Lwg0YDQsNC30LLQtdGA0YLRi9Cy0LDQvdC40LUgTkZUINC60L7QvdGC0YDQsNC60YLQsFxyXG4gIGNvbnN0IHsgYWJpOiBuZnRBYmksIGJ5dGVjb2RlOiBuZnRCeXRlY29kZSB9ID0gYXdhaXQgbG9hZEFydGlmYWN0KCdBY2hpZXZlbWVudE5GVCcpO1xyXG4gIGNvbnN0IG5mdEZhY3RvcnkgPSBuZXcgZXRoZXJzLkNvbnRyYWN0RmFjdG9yeShuZnRBYmksIG5mdEJ5dGVjb2RlLCB0aGlzLmFkbWluKTtcclxuICB0aGlzLm5mdENvbnRyYWN0ID0gYXdhaXQgbmZ0RmFjdG9yeS5kZXBsb3koKTtcclxuICBhd2FpdCB0aGlzLm5mdENvbnRyYWN0LndhaXRGb3JEZXBsb3ltZW50KCk7XHJcbiAgdGhpcy5uZnRDb250cmFjdEFkZHJlc3MgPSBhd2FpdCB0aGlzLm5mdENvbnRyYWN0LmdldEFkZHJlc3MoKTtcclxuXHJcbiAgY29uc29sZS5sb2coYEVkdWNoYWluU3Rha2luZyBkZXBsb3llZCB0bzogJHt0aGlzLnN0YWtpbmdDb250cmFjdEFkZHJlc3N9YCk7XHJcbiAgY29uc29sZS5sb2coYEFjaGlldmVtZW50TkZUIGRlcGxveWVkIHRvOiAke3RoaXMubmZ0Q29udHJhY3RBZGRyZXNzfWApO1xyXG59KTtcclxuXHJcbkFmdGVyKHsgdGFnczogJ0BlZHVjaGFpbicgfSwgYXN5bmMgZnVuY3Rpb24gKCkge1xyXG4gIC8vINCe0YfQuNGB0YLQutCwINGB0L7RgdGC0L7Rj9C90LjRjyDQv9C+0YHQu9C1INGB0YbQtdC90LDRgNC40LXQslxyXG4gIGRlbGV0ZSB0aGlzLnN0YWtpbmdDb250cmFjdDtcclxuICBkZWxldGUgdGhpcy5uZnRDb250cmFjdDtcclxuICBkZWxldGUgdGhpcy5zaWduZXJzO1xyXG59KTsiXSwibWFwcGluZ3MiOiI7O0FBQUEsTUFBTTtFQUFFQSxNQUFNO0VBQUVDO0FBQU0sQ0FBQyxHQUFHQyxPQUFPLENBQUMsb0JBQW9CLENBQUM7QUFDdkQsTUFBTTtFQUFFQztBQUFPLENBQUMsR0FBR0QsT0FBTyxDQUFDLFFBQVEsQ0FBQztBQUNwQyxNQUFNO0VBQUVFO0FBQWEsQ0FBQyxHQUFHRixPQUFPLENBQUMsZUFBZSxDQUFDOztBQUVqRDtBQUNBLE1BQU1HLFlBQVksR0FBRyxDQUFDLENBQUM7QUFFdkJMLE1BQU0sQ0FBQztFQUFFTSxJQUFJLEVBQUU7QUFBWSxDQUFDLEVBQUUsa0JBQWtCO0VBQzlDO0VBQ0EsSUFBSSxDQUFDQyxRQUFRLEdBQUcsSUFBSUosTUFBTSxDQUFDSyxlQUFlLENBQUMsQ0FBQzs7RUFFNUM7RUFDQSxNQUFNQyxXQUFXLEdBQUcsQ0FDbEIsb0VBQW9FLEVBQ3BFLG9FQUFvRSxFQUNwRSxvRUFBb0UsRUFDcEUsb0VBQW9FLEVBQ3BFLG9FQUFvRSxDQUNyRTtFQUVELElBQUksQ0FBQ0MsT0FBTyxHQUFHRCxXQUFXLENBQUNFLEdBQUcsQ0FBQ0MsR0FBRyxJQUFJLElBQUlULE1BQU0sQ0FBQ1UsTUFBTSxDQUFDRCxHQUFHLEVBQUUsSUFBSSxDQUFDTCxRQUFRLENBQUMsQ0FBQzs7RUFFNUU7RUFDQSxLQUFLLE1BQU1PLE1BQU0sSUFBSSxJQUFJLENBQUNKLE9BQU8sRUFBRTtJQUNqQ0wsWUFBWSxDQUFDUyxNQUFNLENBQUNDLE9BQU8sQ0FBQyxHQUFHLE1BQU0sSUFBSSxDQUFDUixRQUFRLENBQUNTLG1CQUFtQixDQUFDRixNQUFNLENBQUNDLE9BQU8sQ0FBQztFQUN4Rjs7RUFFQTtFQUNBLENBQUMsSUFBSSxDQUFDRSxLQUFLLEVBQUUsSUFBSSxDQUFDQyxLQUFLLEVBQUUsSUFBSSxDQUFDQyxHQUFHLEVBQUUsSUFBSSxDQUFDQyxLQUFLLEVBQUUsSUFBSSxDQUFDQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUNYLE9BQU87O0VBRXhFO0VBQ0EsTUFBTTtJQUFFWSxHQUFHO0lBQUVDO0VBQVMsQ0FBQyxHQUFHLE1BQU1uQixZQUFZLENBQUMsVUFBVSxDQUFDO0VBQ3hELE1BQU1vQixPQUFPLEdBQUcsSUFBSXJCLE1BQU0sQ0FBQ3NCLGVBQWUsQ0FBQ0gsR0FBRyxFQUFFQyxRQUFRLEVBQUUsSUFBSSxDQUFDTixLQUFLLENBQUM7RUFDckUsSUFBSSxDQUFDUyxlQUFlLEdBQUcsTUFBTUYsT0FBTyxDQUFDRyxNQUFNLENBQUMsQ0FBQztFQUM3QyxNQUFNLElBQUksQ0FBQ0QsZUFBZSxDQUFDRSxpQkFBaUIsQ0FBQyxDQUFDO0VBQzlDLElBQUksQ0FBQ0Msc0JBQXNCLEdBQUcsTUFBTSxJQUFJLENBQUNILGVBQWUsQ0FBQ0ksVUFBVSxDQUFDLENBQUM7O0VBRXJFO0VBQ0EsSUFBSSxDQUFDQyxZQUFZLEdBQUcsTUFBTSxJQUFJLENBQUNMLGVBQWUsQ0FBQ0ssWUFBWSxDQUFDLENBQUM7RUFDN0QsSUFBSSxDQUFDQyxjQUFjLEdBQUcsTUFBTSxJQUFJLENBQUNOLGVBQWUsQ0FBQ00sY0FBYyxDQUFDLENBQUM7RUFDakUsSUFBSSxDQUFDQyxVQUFVLEdBQUcsTUFBTSxJQUFJLENBQUNQLGVBQWUsQ0FBQ1Esa0JBQWtCLENBQUMsQ0FBQzs7RUFFakU7RUFDQSxNQUFNO0lBQUVaLEdBQUcsRUFBRWEsTUFBTTtJQUFFWixRQUFRLEVBQUVhO0VBQVksQ0FBQyxHQUFHLE1BQU1oQyxZQUFZLENBQUMsZ0JBQWdCLENBQUM7RUFDbkYsTUFBTWlDLFVBQVUsR0FBRyxJQUFJbEMsTUFBTSxDQUFDc0IsZUFBZSxDQUFDVSxNQUFNLEVBQUVDLFdBQVcsRUFBRSxJQUFJLENBQUNuQixLQUFLLENBQUM7RUFDOUUsSUFBSSxDQUFDcUIsV0FBVyxHQUFHLE1BQU1ELFVBQVUsQ0FBQ1YsTUFBTSxDQUFDLENBQUM7RUFDNUMsTUFBTSxJQUFJLENBQUNXLFdBQVcsQ0FBQ1YsaUJBQWlCLENBQUMsQ0FBQztFQUMxQyxJQUFJLENBQUNXLGtCQUFrQixHQUFHLE1BQU0sSUFBSSxDQUFDRCxXQUFXLENBQUNSLFVBQVUsQ0FBQyxDQUFDO0VBRTdEVSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxnQ0FBZ0MsSUFBSSxDQUFDWixzQkFBc0IsRUFBRSxDQUFDO0VBQzFFVyxPQUFPLENBQUNDLEdBQUcsQ0FBQywrQkFBK0IsSUFBSSxDQUFDRixrQkFBa0IsRUFBRSxDQUFDO0FBQ3ZFLENBQUMsQ0FBQztBQUVGdEMsS0FBSyxDQUFDO0VBQUVLLElBQUksRUFBRTtBQUFZLENBQUMsRUFBRSxrQkFBa0I7RUFDN0M7RUFDQSxPQUFPLElBQUksQ0FBQ29CLGVBQWU7RUFDM0IsT0FBTyxJQUFJLENBQUNZLFdBQVc7RUFDdkIsT0FBTyxJQUFJLENBQUM1QixPQUFPO0FBQ3JCLENBQUMsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["Before","After","require","ethers","loadArtifact","nonceManager","tags","provider","JsonRpcProvider","privateKeys","signers","map","key","Wallet","signer","address","getTransactionCount","admin","alice","bob","carol","dave","abi","bytecode","factory","ContractFactory","stakingContract","deploy","waitForDeployment","stakingContractAddress","getAddress","STUDENT_ROLE","PROFESSOR_ROLE","ADMIN_ROLE","DEFAULT_ADMIN_ROLE","nftAbi","nftBytecode","nftFactory","nftContract","nftContractAddress","console","log"],"sourceRoot":"/home/serge/blockchain-lab2/lab6/features/support/","sources":["hooks.js"],"sourcesContent":["const { Before, After } = require('@cucumber/cucumber');\r\nconst { ethers } = require('ethers');\r\nconst { loadArtifact } = require('../../helpers');\r\n\r\n// Глобальный объект для управления nonce\r\nconst nonceManager = {};\r\n\r\nBefore({ tags: '@educhain' }, async function () {\r\n  // Инициализация провайдера - FIX для ethers v6\r\n  this.provider = new ethers.JsonRpcProvider();\r\n  \r\n  // Инициализация аккаунтов\r\n  const privateKeys = [\r\n    \"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\",\r\n    \"0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d\",\r\n    \"0x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a\",\r\n    \"0x7c852118294e51e653712a81e05800f419141751be58f605c371e15141b007a6\",\r\n    \"0x47e179ec197488593b187f80a00eb0da91f1b9d0b13f8733639f19c30a34926a\"\r\n  ];\r\n\r\n  this.signers = privateKeys.map(key => new ethers.Wallet(key, this.provider));\r\n  \r\n  // Инициализация nonce\r\n  for (const signer of this.signers) {\r\n    nonceManager[signer.address] = await this.provider.getTransactionCount(signer.address);\r\n  }\r\n\r\n  // Назначение ролей\r\n  [this.admin, this.alice, this.bob, this.carol, this.dave] = this.signers;\r\n\r\n  // Загрузка и деплой контракта\r\n  const { abi, bytecode } = await loadArtifact('EDUToken');\r\n  const factory = new ethers.ContractFactory(abi, bytecode, this.admin);\r\n  this.stakingContract = await factory.deploy();\r\n  await this.stakingContract.waitForDeployment();\r\n  this.stakingContractAddress = await this.stakingContract.getAddress();\r\n\r\n  // Инициализация ролей\r\n  this.STUDENT_ROLE = await this.stakingContract.STUDENT_ROLE();\r\n  this.PROFESSOR_ROLE = await this.stakingContract.PROFESSOR_ROLE();\r\n  this.ADMIN_ROLE = await this.stakingContract.DEFAULT_ADMIN_ROLE();\r\n  \r\n  // Добавим развертывание NFT контракта\r\n  const { abi: nftAbi, bytecode: nftBytecode } = await loadArtifact('AchievementNFT');\r\n  const nftFactory = new ethers.ContractFactory(nftAbi, nftBytecode, this.admin);\r\n  this.nftContract = await nftFactory.deploy();\r\n  await this.nftContract.waitForDeployment();\r\n  this.nftContractAddress = await this.nftContract.getAddress();\r\n\r\n  console.log(`EduchainStaking deployed to: ${this.stakingContractAddress}`);\r\n  console.log(`AchievementNFT deployed to: ${this.nftContractAddress}`);\r\n});\r\n\r\nAfter({ tags: '@educhain' }, async function () {\r\n  // Очистка состояния после сценариев\r\n  delete this.stakingContract;\r\n  delete this.nftContract;\r\n  delete this.signers;\r\n});"],"mappings":"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","ignoreList":[]}},"mtime":1753429735374},"{\"assumptions\":{},\"sourceRoot\":\"/home/serge/blockchain-lab2/lab6/features/step_definitions/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/serge/blockchain-lab2/lab6\",\"filename\":\"/home/serge/blockchain-lab2/lab6/features/step_definitions/educhain_staking_steps.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/serge/blockchain-lab2/lab6\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-explicit-resource-management\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"BlockStatement\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regexp-modifiers\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$3\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$4\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$5\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$6\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$7\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$8\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$9\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$10\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$11\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$12\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$16\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$17\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.28.0:development":{"value":{"code":"\"use strict\";\n\nconst {\n  Given,\n  When,\n  Then,\n  Before\n} = require('@cucumber/cucumber');\nconst {\n  expect\n} = require('chai');\nconst {\n  ethers\n} = require(\"ethers\");\nconst {\n  loadArtifact\n} = require('../../helpers');\nconst {\n  sendTransaction\n} = require('../../helpers');\n\n// Глобальный объект для отслеживания nonce\nconst nonceManager = {};\nGiven('Контракт не находится в состоянии паузы', async function () {\n  expect(await this.contract.paused()).to.be.false;\n});\nGiven('Пользователь {string} имеет роль {string}', async function (userName, roleName) {\n  const user = this[userName.toLowerCase()];\n  let role;\n  switch (roleName) {\n    case 'Student':\n      role = this.STUDENT_ROLE;\n      break;\n    case 'Professor':\n      role = this.PROFESSOR_ROLE;\n      break;\n    case 'Admin':\n      role = this.ADMIN_ROLE;\n      break;\n    case 'Investor':\n      role = this.INVESTOR_ROLE;\n      break;\n    default:\n      throw new Error(`Unknown role: ${roleName}`);\n  }\n  await sendTransaction(this.admin, this.contract, 'grantRole', [role, user.address]);\n});\n\n// Обновить шаги, связанные с балансом\nGiven('Кошелек {string} имеет баланс ≥ {int} EDU', async function (userName, minBalance) {\n  const user = this[userName.toLowerCase()];\n  const minBalanceWei = ethers.parseEther(String(minBalance));\n  const amount = minBalanceWei + ethers.parseEther(\"1\");\n  await sendTransaction(this.admin, this.contract, 'mint', [user.address, amount]);\n  const userBalance = await this.contract.balanceOf(user.address);\n  expect(userBalance >= minBalanceWei).to.be.true;\n});\nGiven('Администратор приостановил контракт', async function () {\n  await sendTransaction(this.admin, this.contract, 'setPaused', [true]);\n  expect(await this.contract.paused()).to.be.true;\n});\n\n// В шаге When добавить сброс ошибки\nWhen('Пользователь {string} вызывает метод stake\\\\({int})', async function (userName, amount) {\n  const user = this[userName.toLowerCase()];\n  this.lastError = null; // Сбрасываем ошибку\n  const amountWei = ethers.parseEther(amount.toString());\n  try {\n    this.lastTx = await sendTransaction(user, this.contract, 'stake', [amountWei]);\n  } catch (error) {\n    this.lastError = error;\n  }\n});\nThen('Баланс стейкинга {string} увеличивается на {int} EDU', async function (userName, amount) {\n  const user = this[userName.toLowerCase()];\n  const stakeBalance = await this.contract.getStake(user.address);\n  const amountWei = ethers.parseEther(amount.toString());\n  expect(stakeBalance).to.equal(amountWei);\n});\nThen('Баланс стейкинга {string} не изменяется', async function (userName) {\n  const user = this[userName.toLowerCase()];\n  const stakeBalance = await this.contract.getStake(user.address);\n  expect(stakeBalance).to.equal(0n); // Используем BigInt литерал 0n\n});\nThen('Событие Staked эмитируется с параметрами \\\\({string}, {int})', async function (userName, amount) {\n  const user = this[userName.toLowerCase()];\n  const amountWei = ethers.parseEther(amount.toString());\n  const receipt = await this.lastTx.wait();\n  let eventFound = false;\n  for (const log of receipt.logs) {\n    try {\n      const event = this.contract.interface.parseLog(log);\n      if (event.name === \"Staked\" && event.args.user === user.address && event.args.amount == amountWei) {\n        eventFound = true;\n        break;\n      }\n    } catch (e) {\n      // Игнорируем нерелевантные логи\n    }\n  }\n  if (!eventFound) {\n    throw new Error(`Event Staked with parameters (${userName}, ${amount}) not found`);\n  }\n});\nGiven('Контракт активен', async function () {\n  const isPaused = await this.contract.paused();\n  if (isPaused) {\n    await sendTransaction(this.admin, this.contract, 'setPaused', [false]);\n  }\n  expect(await this.contract.paused()).to.be.false;\n});\nThen('Транзакция отменена с ошибкой {string}', function (errorMessage) {\n  expect(this.lastError).to.not.be.undefined;\n\n  // Обновляем ожидаемое сообщение об ошибке\n  const expectedMessages = {\n    \"Operations paused\": \"Contract is paused\",\n    \"Amount must be > 0\": \"Amount must be > 0\",\n    \"Access denied: Only Student/Professor\": \"Access denied: Only Student/Professor\",\n    \"Exceeds max stake\": \"Exceeds max stake\"\n  };\n  const expectedError = expectedMessages[errorMessage] || errorMessage;\n  if (!this.lastError.message.includes(expectedError)) {\n    throw new Error(`Expected error \"${expectedError}\" but got \"${this.lastError.message}\"`);\n  }\n});\nThen('успешно', function () {\n  expect(this.lastError).to.be.oneOf([null, undefined]);\n});\nThen('ошибка', function () {\n  expect(this.lastError).to.not.be.oneOf([null, undefined]);\n});\n\n// Обновить шаг проверки сообщения об ошибке\nThen('сообщение об ошибке содержит {string}', function (errorMessage) {\n  if (errorMessage === '') {\n    // Для пустого сообщения - ошибки не должно быть\n    expect(this.lastError).to.be.oneOf([null, undefined]);\n  } else {\n    // Для непустого сообщения - должна быть ошибка\n    expect(this.lastError).to.not.be.oneOf([null, undefined]);\n    expect(this.lastError.message).to.include(errorMessage);\n  }\n});\n\n// Добавить этот шаг обратно\nThen('Событие Staked эмитируется с параметрами \\\\(alice, {int})', async function (amount) {\n  const amountWei = ethers.parseEther(amount.toString());\n  const receipt = await this.lastTx.wait();\n  let eventFound = false;\n  for (const log of receipt.logs) {\n    try {\n      const event = this.contract.interface.parseLog(log);\n      if (event.name === \"Staked\" && event.args.user === this.alice.address && event.args.amount == amountWei) {\n        eventFound = true;\n        break;\n      }\n    } catch (e) {\n      // Игнорируем нерелевантные логи\n    }\n  }\n  if (!eventFound) {\n    throw new Error(`Event Staked with parameters (alice, ${amount}) not found`);\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["Given","When","Then","Before","require","expect","ethers","loadArtifact","sendTransaction","nonceManager","contract","paused","to","be","false","userName","roleName","user","toLowerCase","role","STUDENT_ROLE","PROFESSOR_ROLE","ADMIN_ROLE","INVESTOR_ROLE","Error","admin","address","minBalance","minBalanceWei","parseEther","String","amount","userBalance","balanceOf","true","lastError","amountWei","toString","lastTx","error","stakeBalance","getStake","equal","receipt","wait","eventFound","log","logs","event","interface","parseLog","name","args","e","isPaused","errorMessage","not","undefined","expectedMessages","expectedError","message","includes","oneOf","include","alice"],"sourceRoot":"/home/serge/blockchain-lab2/lab6/features/step_definitions/","sources":["educhain_staking_steps.js"],"sourcesContent":["const { Given, When, Then, Before } = require('@cucumber/cucumber');\r\nconst { expect } = require('chai');\r\nconst { ethers } = require(\"ethers\");\r\nconst { loadArtifact } = require('../../helpers');\r\nconst { sendTransaction } = require('../../helpers');\r\n\r\n// Глобальный объект для отслеживания nonce\r\nconst nonceManager = {};\r\n\r\n\r\nGiven('Контракт не находится в состоянии паузы', async function () {\r\n  expect(await this.contract.paused()).to.be.false;\r\n});\r\n\r\nGiven('Пользователь {string} имеет роль {string}', async function (userName, roleName) {\r\n  const user = this[userName.toLowerCase()];\r\n  let role;\r\n  \r\n  switch(roleName) {\r\n    case 'Student': role = this.STUDENT_ROLE; break;\r\n    case 'Professor': role = this.PROFESSOR_ROLE; break;\r\n    case 'Admin': role = this.ADMIN_ROLE; break;\r\n    case 'Investor': role = this.INVESTOR_ROLE; break;\r\n    default: throw new Error(`Unknown role: ${roleName}`);\r\n  }\r\n  \r\n  await sendTransaction(\r\n    this.admin,\r\n    this.contract,\r\n    'grantRole',\r\n    [role, user.address]\r\n  );\r\n});\r\n\r\n// Обновить шаги, связанные с балансом\r\nGiven('Кошелек {string} имеет баланс ≥ {int} EDU', async function (userName, minBalance) {\r\n  const user = this[userName.toLowerCase()];\r\n  const minBalanceWei = ethers.parseEther(String(minBalance));\r\n  const amount = minBalanceWei + ethers.parseEther(\"1\");\r\n  \r\n  await sendTransaction(\r\n    this.admin,\r\n    this.contract,\r\n    'mint',\r\n    [user.address, amount]\r\n  );\r\n  \r\n  const userBalance = await this.contract.balanceOf(user.address);\r\n  expect(userBalance >= minBalanceWei).to.be.true;\r\n});\r\n\r\nGiven('Администратор приостановил контракт', async function () {\r\n  await sendTransaction(\r\n    this.admin,\r\n    this.contract,\r\n    'setPaused',\r\n    [true]\r\n  );\r\n  expect(await this.contract.paused()).to.be.true;\r\n});\r\n\r\n// В шаге When добавить сброс ошибки\r\nWhen('Пользователь {string} вызывает метод stake\\\\({int})', async function (userName, amount) {\r\n  const user = this[userName.toLowerCase()];\r\n  this.lastError = null; // Сбрасываем ошибку\r\n  const amountWei = ethers.parseEther(amount.toString());\r\n  \r\n  try {\r\n    this.lastTx = await sendTransaction(\r\n      user,\r\n      this.contract,\r\n      'stake',\r\n      [amountWei]\r\n    );\r\n  } catch (error) {\r\n    this.lastError = error;\r\n  }\r\n});\r\n\r\nThen('Баланс стейкинга {string} увеличивается на {int} EDU', async function (userName, amount) {\r\n  const user = this[userName.toLowerCase()];\r\n  const stakeBalance = await this.contract.getStake(user.address);\r\n  const amountWei = ethers.parseEther(amount.toString());\r\n  expect(stakeBalance).to.equal(amountWei);\r\n});\r\n\r\nThen('Баланс стейкинга {string} не изменяется', async function (userName) {\r\n  const user = this[userName.toLowerCase()];\r\n  const stakeBalance = await this.contract.getStake(user.address);\r\n  expect(stakeBalance).to.equal(0n); // Используем BigInt литерал 0n\r\n});\r\n\r\nThen('Событие Staked эмитируется с параметрами \\\\({string}, {int})', async function (userName, amount) {\r\n  const user = this[userName.toLowerCase()];\r\n  const amountWei = ethers.parseEther(amount.toString());\r\n  const receipt = await this.lastTx.wait();\r\n  \r\n  let eventFound = false;\r\n  for (const log of receipt.logs) {\r\n    try {\r\n      const event = this.contract.interface.parseLog(log);\r\n      if (event.name === \"Staked\" && \r\n          event.args.user === user.address && \r\n          event.args.amount == amountWei) {\r\n        eventFound = true;\r\n        break;\r\n      }\r\n    } catch (e) {\r\n      // Игнорируем нерелевантные логи\r\n    }\r\n  }\r\n  \r\n  if (!eventFound) {\r\n    throw new Error(`Event Staked with parameters (${userName}, ${amount}) not found`);\r\n  }\r\n});\r\n\r\nGiven('Контракт активен', async function () {\r\n  const isPaused = await this.contract.paused();\r\n  \r\n  if (isPaused) {\r\n    await sendTransaction(\r\n      this.admin,\r\n      this.contract,\r\n      'setPaused',\r\n      [false]\r\n    );\r\n  }\r\n  \r\n  expect(await this.contract.paused()).to.be.false;\r\n});\r\n\r\nThen('Транзакция отменена с ошибкой {string}', function (errorMessage) {\r\n  expect(this.lastError).to.not.be.undefined;\r\n  \r\n  // Обновляем ожидаемое сообщение об ошибке\r\n  const expectedMessages = {\r\n    \"Operations paused\": \"Contract is paused\",\r\n    \"Amount must be > 0\": \"Amount must be > 0\",\r\n    \"Access denied: Only Student/Professor\": \"Access denied: Only Student/Professor\",\r\n    \"Exceeds max stake\": \"Exceeds max stake\"\r\n  };\r\n  \r\n  const expectedError = expectedMessages[errorMessage] || errorMessage;\r\n  \r\n  if (!this.lastError.message.includes(expectedError)) {\r\n    throw new Error(`Expected error \"${expectedError}\" but got \"${this.lastError.message}\"`);\r\n  }\r\n});\r\n\r\nThen('успешно', function () {\r\n  expect(this.lastError).to.be.oneOf([null, undefined]);\r\n});\r\n\r\nThen('ошибка', function () {\r\n  expect(this.lastError).to.not.be.oneOf([null, undefined]);\r\n});\r\n\r\n// Обновить шаг проверки сообщения об ошибке\r\nThen('сообщение об ошибке содержит {string}', function (errorMessage) {\r\n  if (errorMessage === '') {\r\n    // Для пустого сообщения - ошибки не должно быть\r\n    expect(this.lastError).to.be.oneOf([null, undefined]);\r\n  } else {\r\n    // Для непустого сообщения - должна быть ошибка\r\n    expect(this.lastError).to.not.be.oneOf([null, undefined]);\r\n    expect(this.lastError.message).to.include(errorMessage);\r\n  }\r\n});\r\n\r\n// Добавить этот шаг обратно\r\nThen('Событие Staked эмитируется с параметрами \\\\(alice, {int})', async function (amount) {\r\n  const amountWei = ethers.parseEther(amount.toString());\r\n  const receipt = await this.lastTx.wait();\r\n  \r\n  let eventFound = false;\r\n  for (const log of receipt.logs) {\r\n    try {\r\n      const event = this.contract.interface.parseLog(log);\r\n      if (event.name === \"Staked\" && \r\n          event.args.user === this.alice.address && \r\n          event.args.amount == amountWei) {\r\n        eventFound = true;\r\n        break;\r\n      }\r\n    } catch (e) {\r\n      // Игнорируем нерелевантные логи\r\n    }\r\n  }\r\n  \r\n  if (!eventFound) {\r\n    throw new Error(`Event Staked with parameters (alice, ${amount}) not found`);\r\n  }\r\n});"],"mappings":"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","ignoreList":[]}},"mtime":1753429062160},"{\"assumptions\":{},\"sourceRoot\":\"/home/serge/blockchain-lab2/lab6/features/step_definitions/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/serge/blockchain-lab2/lab6\",\"filename\":\"/home/serge/blockchain-lab2/lab6/features/step_definitions/nft_steps.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/serge/blockchain-lab2/lab6\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-explicit-resource-management\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"BlockStatement\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regexp-modifiers\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$3\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$4\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$5\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$6\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$7\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$8\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$9\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$10\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$11\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$12\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$16\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$17\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.28.0:development":{"value":{"code":"\"use strict\";\n\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\nconst {\n  Given,\n  When,\n  Then,\n  Before,\n  After\n} = require('@cucumber/cucumber');\nconst {\n  ethers\n} = require('ethers');\nconst {\n  expect\n} = require('chai');\nconst sinon = require('sinon');\nconst ganache = require('ganache');\nconst path = require('path');\nconst fs = require('fs');\nconst {\n  loadArtifact\n} = require('../../helpers');\n//const AchievementNFT = require('../../artifacts/AchievementNFT.json');\n//const stakingArtifactPath = path.join(__dirname, '../../out/AchievementNFT.sol/AchievementNFT.json');\n//const nftArtifact = JSON.parse(fs.readFileSync(stakingArtifactPath, 'utf8'));\n\n// Global variables\nlet provider;\nlet server = null;\nlet accounts;\nlet nftContract;\n\n// Unified IPFS client\nconst getIpfsClient = async () => {\n  if (process.argv.includes('--require-module') || process.argv.includes('@babel/register')) {\n    return {\n      add: () => Promise.resolve({\n        cid: 'QmMockCID'\n      }),\n      pin: {\n        ls: () => Promise.resolve([])\n      }\n    };\n  }\n  try {\n    const {\n      create\n    } = await Promise.resolve().then(() => _interopRequireWildcard(require('ipfs-http-client')));\n    return create({\n      host: process.env.IPFS_HOST || 'localhost',\n      port: 5001,\n      protocol: 'http'\n    });\n  } catch (e) {\n    console.error('IPFS client error:', e);\n    return {\n      add: () => Promise.reject('IPFS not available'),\n      pin: {\n        ls: () => Promise.reject('IPFS not available')\n      }\n    };\n  }\n};\n\n// Step definitions\nGiven('I have an IPFS client', async function () {\n  this.ipfs = await getIpfsClient();\n});\nWhen('I add a file to IPFS', async function () {\n  const content = Buffer.from('test content');\n  const result = await this.ipfs.add(content);\n  this.cid = result.cid.toString();\n});\nThen('I should get a valid CID', function () {\n  expect(this.cid).to.match(/Qm[a-zA-Z0-9]{44}/);\n});\n// Используем Before и After с большой буквы (как импортировано)\n// В начале хука Before\n//const { getPort } = require('../support/hooks');\n\n// В начале хука Before\n\nAfter(async function () {\n  if (this.server) {\n    await this.server.close();\n  }\n});\nGiven('User {string} completes course {string}', function (userAddress, courseName) {\n  this.userAddress = userAddress;\n  this.courseId = 101;\n});\nWhen('System mints achievement NFT', async function () {\n  // Get accounts using v6 syntax\n  const accounts = await this.provider.listAccounts();\n\n  // Get signer for the first account\n  const owner = this.provider.getSigner(accounts[0]);\n\n  // Generate tokenId with v6 methods\n  const tokenId = ethers.keccak256(ethers.AbiCoder.defaultAbiCoder().encode(['address', 'string'], [this.userAddress, this.courseName]));\n\n  // Connect to contract\n  const contract = new ethers.Contract(this.nftContract.address, this.nftContract.abi, owner);\n\n  // Mint NFT\n  await contract.mint(this.userAddress, tokenId);\n\n  // Store for later steps\n  this.tokenId = tokenId;\n});\nThen('Metadata should be pinned to IPFS', async function () {\n  try {\n    if (this.ipfs.pin) {\n      const pinned = await this.ipfs.pin.ls();\n      const isPinned = [...pinned].some(p => p.cid === this.expectedCid);\n      expect(isPinned).to.be.true;\n    } else {\n      console.log('Skipping IPFS pin check in mock mode');\n      expect(true).to.be.true; // Всегда проходит в mock-режиме\n    }\n  } catch (error) {\n    console.error('IPFS pin check error:', error);\n    throw error;\n  }\n});\nThen('NFT balance should be {int}', async function (expectedBalance) {\n  const balance = await nftContract.balanceOf(this.userAddress, this.courseId);\n  expect(Number(balance)).to.equal(expectedBalance);\n});\n\n// Debug logs\nconsole.log('IPFS module type:', typeof getIpfsClient);\ntry {\n  console.log('IPFS client version:', require('ipfs-http-client/package.json').version);\n} catch (e) {\n  console.log('IPFS client not available');\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["Given","When","Then","Before","After","require","ethers","expect","sinon","ganache","path","fs","loadArtifact","provider","server","accounts","nftContract","getIpfsClient","process","argv","includes","add","Promise","resolve","cid","pin","ls","create","then","_interopRequireWildcard","host","env","IPFS_HOST","port","protocol","e","console","error","reject","ipfs","content","Buffer","from","result","toString","to","match","close","userAddress","courseName","courseId","listAccounts","owner","getSigner","tokenId","keccak256","AbiCoder","defaultAbiCoder","encode","contract","Contract","address","abi","mint","pinned","isPinned","some","p","expectedCid","be","true","log","expectedBalance","balance","balanceOf","Number","equal","version"],"sourceRoot":"/home/serge/blockchain-lab2/lab6/features/step_definitions/","sources":["nft_steps.js"],"sourcesContent":["const { Given, When, Then, Before, After } = require('@cucumber/cucumber');\r\nconst { ethers } = require('ethers');\r\nconst { expect } = require('chai');\r\nconst sinon = require('sinon');\r\nconst ganache = require('ganache');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\nconst { loadArtifact } = require('../../helpers');\r\n//const AchievementNFT = require('../../artifacts/AchievementNFT.json');\r\n//const stakingArtifactPath = path.join(__dirname, '../../out/AchievementNFT.sol/AchievementNFT.json');\r\n//const nftArtifact = JSON.parse(fs.readFileSync(stakingArtifactPath, 'utf8'));\r\n\r\n\r\n// Global variables\r\nlet provider;\r\nlet server = null;\r\nlet accounts;\r\nlet nftContract;\r\n\r\n// Unified IPFS client\r\nconst getIpfsClient = async () => {\r\n  if (process.argv.includes('--require-module') || \r\n      process.argv.includes('@babel/register')) {\r\n    return {\r\n      add: () => Promise.resolve({ cid: 'QmMockCID' }),\r\n      pin: {\r\n        ls: () => Promise.resolve([])\r\n      }\r\n    };\r\n  }\r\n  \r\n  try {\r\n    const { create } = await import('ipfs-http-client');\r\n    return create({\r\n      host: process.env.IPFS_HOST || 'localhost',\r\n      port: 5001,\r\n      protocol: 'http'\r\n    });\r\n  } catch (e) {\r\n    console.error('IPFS client error:', e);\r\n    return {\r\n      add: () => Promise.reject('IPFS not available'),\r\n      pin: {\r\n        ls: () => Promise.reject('IPFS not available')\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\n// Step definitions\r\nGiven('I have an IPFS client', async function() {\r\n  this.ipfs = await getIpfsClient();\r\n});\r\n\r\nWhen('I add a file to IPFS', async function() {\r\n  const content = Buffer.from('test content');\r\n  const result = await this.ipfs.add(content);\r\n  this.cid = result.cid.toString();\r\n});\r\n\r\nThen('I should get a valid CID', function() {\r\n  expect(this.cid).to.match(/Qm[a-zA-Z0-9]{44}/);\r\n});\r\n// Используем Before и After с большой буквы (как импортировано)\r\n// В начале хука Before\r\n//const { getPort } = require('../support/hooks');\r\n\r\n// В начале хука Before\r\n\r\n\r\nAfter(async function() {\r\n  if (this.server) {\r\n    await this.server.close();\r\n  }\r\n});\r\n\r\n\r\nGiven('User {string} completes course {string}', function(userAddress, courseName) {\r\n  this.userAddress = userAddress;\r\n  this.courseId = 101;\r\n});\r\n\r\nWhen('System mints achievement NFT', async function () {\r\n  // Get accounts using v6 syntax\r\n  const accounts = await this.provider.listAccounts();\r\n  \r\n  // Get signer for the first account\r\n  const owner = this.provider.getSigner(accounts[0]);\r\n  \r\n  // Generate tokenId with v6 methods\r\n  const tokenId = ethers.keccak256(\r\n    ethers.AbiCoder.defaultAbiCoder().encode(\r\n      ['address', 'string'],\r\n      [this.userAddress, this.courseName]\r\n    )\r\n  );\r\n\r\n  // Connect to contract\r\n  const contract = new ethers.Contract(\r\n    this.nftContract.address,\r\n    this.nftContract.abi,\r\n    owner\r\n  );\r\n\r\n  // Mint NFT\r\n  await contract.mint(this.userAddress, tokenId);\r\n  \r\n  // Store for later steps\r\n  this.tokenId = tokenId;\r\n});\r\n\r\nThen('Metadata should be pinned to IPFS', async function() {\r\n  try {\r\n    if (this.ipfs.pin) {\r\n      const pinned = await this.ipfs.pin.ls();\r\n      const isPinned = [...pinned].some(p => p.cid === this.expectedCid);\r\n      expect(isPinned).to.be.true;\r\n    } else {\r\n      console.log('Skipping IPFS pin check in mock mode');\r\n      expect(true).to.be.true; // Всегда проходит в mock-режиме\r\n    }\r\n  } catch (error) {\r\n    console.error('IPFS pin check error:', error);\r\n    throw error;\r\n  }\r\n});\r\n\r\nThen('NFT balance should be {int}', async function(expectedBalance) {\r\n  const balance = await nftContract.balanceOf(this.userAddress, this.courseId);\r\n  expect(Number(balance)).to.equal(expectedBalance);\r\n});\r\n\r\n\r\n// Debug logs\r\nconsole.log('IPFS module type:', typeof getIpfsClient);\r\ntry {\r\n  console.log('IPFS client version:', require('ipfs-http-client/package.json').version);\r\n} catch (e) {\r\n  console.log('IPFS client not available');\r\n}"],"mappings":"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","ignoreList":[]}},"mtime":1753428412063},"{\"assumptions\":{},\"sourceRoot\":\"/home/serge/blockchain-lab2/lab6/features/step_definitions/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/serge/blockchain-lab2/lab6\",\"filename\":\"/home/serge/blockchain-lab2/lab6/features/step_definitions/educhain_staking_steps.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/serge/blockchain-lab2/lab6\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-explicit-resource-management\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"BlockStatement\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regexp-modifiers\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$3\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$4\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$5\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$6\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$7\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$8\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$9\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$10\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$11\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$12\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$16\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$17\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.28.0:development":{"value":{"code":"\"use strict\";\n\nconst {\n  Given,\n  When,\n  Then,\n  Before\n} = require('@cucumber/cucumber');\nconst {\n  expect\n} = require('chai');\nconst {\n  ethers\n} = require(\"ethers\");\nconst {\n  loadArtifact\n} = require('../../helpers');\nconst {\n  sendTransaction\n} = require('../../helpers');\n\n// Глобальный объект для отслеживания nonce\nconst nonceManager = {};\nGiven('Контракт не находится в состоянии паузы', async function () {\n  expect(await this.contract.paused()).to.be.false;\n});\nGiven('Пользователь {string} имеет роль {string}', async function (userName, roleName) {\n  const user = this[userName.toLowerCase()];\n  let role;\n  switch (roleName) {\n    case 'Student':\n      role = this.STUDENT_ROLE;\n      break;\n    case 'Professor':\n      role = this.PROFESSOR_ROLE;\n      break;\n    case 'Admin':\n      role = this.ADMIN_ROLE;\n      break;\n    case 'Investor':\n      role = this.INVESTOR_ROLE;\n      break;\n    default:\n      throw new Error(`Unknown role: ${roleName}`);\n  }\n  await sendTransaction(this.admin, this.contract, 'grantRole', [role, user.address]);\n});\n\n// Обновить шаги, связанные с балансом\nGiven('Кошелек {string} имеет баланс ≥ {int} EDU', async function (userName, minBalance) {\n  const user = this[userName.toLowerCase()];\n  const minBalanceWei = ethers.parseEther(String(minBalance));\n  const amount = minBalanceWei + ethers.parseEther(\"1\");\n  await sendTransaction(this.admin, this.contract, 'mint', [user.address, amount]);\n  const userBalance = await this.contract.balanceOf(user.address);\n  expect(userBalance >= minBalanceWei).to.be.true;\n});\nGiven('Администратор приостановил контракт', async function () {\n  await sendTransaction(this.admin, this.contract, 'setPaused', [true]);\n  expect(await this.contract.paused()).to.be.true;\n});\n\n// В шаге When добавить сброс ошибки\nWhen('Пользователь {string} вызывает метод stake\\\\({int})', async function (userName, amount) {\n  const user = this[userName.toLowerCase()];\n  this.lastError = null; // Сбрасываем ошибку\n  const amountWei = ethers.parseEther(amount.toString());\n  try {\n    this.lastTx = await sendTransaction(user, this.contract, 'stake', [amountWei]);\n  } catch (error) {\n    this.lastError = error;\n  }\n});\nThen('Баланс стейкинга {string} увеличивается на {int} EDU', async function (userName, amount) {\n  const user = this[userName.toLowerCase()];\n  const stakeBalance = await this.contract.getStake(user.address);\n  const amountWei = ethers.parseEther(amount.toString());\n  expect(stakeBalance).to.equal(amountWei);\n});\nThen('Баланс стейкинга {string} не изменяется', async function (userName) {\n  const user = this[userName.toLowerCase()];\n  const stakeBalance = await this.contract.getStake(user.address);\n  expect(stakeBalance).to.equal(0n); // Используем BigInt литерал 0n\n});\nThen('Событие Staked эмитируется с параметрами \\\\({string}, {int})', async function (userName, amount) {\n  const user = this[userName.toLowerCase()];\n  const amountWei = ethers.parseEther(amount.toString());\n  const receipt = await this.lastTx.wait();\n  let eventFound = false;\n  for (const log of receipt.logs) {\n    try {\n      const event = this.contract.interface.parseLog(log);\n      if (event.name === \"Staked\" && event.args.user === user.address && event.args.amount == amountWei) {\n        eventFound = true;\n        break;\n      }\n    } catch (e) {\n      // Игнорируем нерелевантные логи\n    }\n  }\n  if (!eventFound) {\n    throw new Error(`Event Staked with parameters (${userName}, ${amount}) not found`);\n  }\n});\nGiven('Контракт активен', async function () {\n  const isPaused = await this.contract.paused();\n  if (isPaused) {\n    await sendTransaction(this.admin, this.contract, 'setPaused', [false]);\n  }\n  expect(await this.contract.paused()).to.be.false;\n});\nThen('Транзакция отменена с ошибкой {string}', function (errorMessage) {\n  expect(this.lastError).to.not.be.undefined;\n\n  // Обновляем ожидаемое сообщение об ошибке\n  const expectedMessages = {\n    \"Operations paused\": \"Contract is paused\",\n    \"Amount must be > 0\": \"Amount must be > 0\",\n    \"Access denied: Only Student/Professor\": \"Access denied: Only Student/Professor\",\n    \"Exceeds max stake\": \"Exceeds max stake\"\n  };\n  const expectedError = expectedMessages[errorMessage] || errorMessage;\n  if (!this.lastError.message.includes(expectedError)) {\n    throw new Error(`Expected error \"${expectedError}\" but got \"${this.lastError.message}\"`);\n  }\n});\nThen('успешно', function () {\n  expect(this.lastError).to.be.oneOf([null, undefined]);\n});\nThen('ошибка', function () {\n  expect(this.lastError).to.not.be.oneOf([null, undefined]);\n});\n\n// Обновить шаг проверки сообщения об ошибке\nThen('сообщение об ошибке содержит {string}', function (errorMessage) {\n  if (errorMessage === '') {\n    // Для пустого сообщения - ошибки не должно быть\n    expect(this.lastError).to.be.oneOf([null, undefined]);\n  } else {\n    // Для непустого сообщения - должна быть ошибка\n    expect(this.lastError).to.not.be.oneOf([null, undefined]);\n    expect(this.lastError.message).to.include(errorMessage);\n  }\n});\n\n// Добавить этот шаг обратно\nThen('Событие Staked эмитируется с параметрами \\\\(alice, {int})', async function (amount) {\n  const amountWei = ethers.parseEther(amount.toString());\n  const receipt = await this.lastTx.wait();\n  let eventFound = false;\n  for (const log of receipt.logs) {\n    try {\n      const event = this.contract.interface.parseLog(log);\n      if (event.name === \"Staked\" && event.args.user === this.alice.address && event.args.amount == amountWei) {\n        eventFound = true;\n        break;\n      }\n    } catch (e) {\n      // Игнорируем нерелевантные логи\n    }\n  }\n  if (!eventFound) {\n    throw new Error(`Event Staked with parameters (alice, ${amount}) not found`);\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["Given","When","Then","Before","require","expect","ethers","loadArtifact","sendTransaction","nonceManager","contract","paused","to","be","false","userName","roleName","user","toLowerCase","role","STUDENT_ROLE","PROFESSOR_ROLE","ADMIN_ROLE","INVESTOR_ROLE","Error","admin","address","minBalance","minBalanceWei","parseEther","String","amount","userBalance","balanceOf","true","lastError","amountWei","toString","lastTx","error","stakeBalance","getStake","equal","receipt","wait","eventFound","log","logs","event","interface","parseLog","name","args","e","isPaused","errorMessage","not","undefined","expectedMessages","expectedError","message","includes","oneOf","include","alice"],"sourceRoot":"/home/serge/blockchain-lab2/lab6/features/step_definitions/","sources":["educhain_staking_steps.js"],"sourcesContent":["const { Given, When, Then, Before } = require('@cucumber/cucumber');\r\nconst { expect } = require('chai');\r\nconst { ethers } = require(\"ethers\");\r\nconst { loadArtifact } = require('../../helpers');\r\nconst { sendTransaction } = require('../../helpers');\r\n\r\n// Глобальный объект для отслеживания nonce\r\nconst nonceManager = {};\r\n\r\n\r\nGiven('Контракт не находится в состоянии паузы', async function () {\r\n  expect(await this.contract.paused()).to.be.false;\r\n});\r\n\r\nGiven('Пользователь {string} имеет роль {string}', async function (userName, roleName) {\r\n  const user = this[userName.toLowerCase()];\r\n  let role;\r\n  \r\n  switch(roleName) {\r\n    case 'Student': role = this.STUDENT_ROLE; break;\r\n    case 'Professor': role = this.PROFESSOR_ROLE; break;\r\n    case 'Admin': role = this.ADMIN_ROLE; break;\r\n    case 'Investor': role = this.INVESTOR_ROLE; break;\r\n    default: throw new Error(`Unknown role: ${roleName}`);\r\n  }\r\n  \r\n  await sendTransaction(\r\n    this.admin,\r\n    this.contract,\r\n    'grantRole',\r\n    [role, user.address]\r\n  );\r\n});\r\n\r\n// Обновить шаги, связанные с балансом\r\nGiven('Кошелек {string} имеет баланс ≥ {int} EDU', async function (userName, minBalance) {\r\n  const user = this[userName.toLowerCase()];\r\n  const minBalanceWei = ethers.parseEther(String(minBalance));\r\n  const amount = minBalanceWei + ethers.parseEther(\"1\");\r\n  \r\n  await sendTransaction(\r\n    this.admin,\r\n    this.contract,\r\n    'mint',\r\n    [user.address, amount]\r\n  );\r\n  \r\n  const userBalance = await this.contract.balanceOf(user.address);\r\n  expect(userBalance >= minBalanceWei).to.be.true;\r\n});\r\n\r\nGiven('Администратор приостановил контракт', async function () {\r\n  await sendTransaction(\r\n    this.admin,\r\n    this.contract,\r\n    'setPaused',\r\n    [true]\r\n  );\r\n  expect(await this.contract.paused()).to.be.true;\r\n});\r\n\r\n// В шаге When добавить сброс ошибки\r\nWhen('Пользователь {string} вызывает метод stake\\\\({int})', async function (userName, amount) {\r\n  const user = this[userName.toLowerCase()];\r\n  this.lastError = null; // Сбрасываем ошибку\r\n  const amountWei = ethers.parseEther(amount.toString());\r\n  \r\n  try {\r\n    this.lastTx = await sendTransaction(\r\n      user,\r\n      this.contract,\r\n      'stake',\r\n      [amountWei]\r\n    );\r\n  } catch (error) {\r\n    this.lastError = error;\r\n  }\r\n});\r\n\r\nThen('Баланс стейкинга {string} увеличивается на {int} EDU', async function (userName, amount) {\r\n  const user = this[userName.toLowerCase()];\r\n  const stakeBalance = await this.contract.getStake(user.address);\r\n  const amountWei = ethers.parseEther(amount.toString());\r\n  expect(stakeBalance).to.equal(amountWei);\r\n});\r\n\r\nThen('Баланс стейкинга {string} не изменяется', async function (userName) {\r\n  const user = this[userName.toLowerCase()];\r\n  const stakeBalance = await this.contract.getStake(user.address);\r\n  expect(stakeBalance).to.equal(0n); // Используем BigInt литерал 0n\r\n});\r\n\r\nThen('Событие Staked эмитируется с параметрами \\\\({string}, {int})', async function (userName, amount) {\r\n  const user = this[userName.toLowerCase()];\r\n  const amountWei = ethers.parseEther(amount.toString());\r\n  const receipt = await this.lastTx.wait();\r\n  \r\n  let eventFound = false;\r\n  for (const log of receipt.logs) {\r\n    try {\r\n      const event = this.contract.interface.parseLog(log);\r\n      if (event.name === \"Staked\" && \r\n          event.args.user === user.address && \r\n          event.args.amount == amountWei) {\r\n        eventFound = true;\r\n        break;\r\n      }\r\n    } catch (e) {\r\n      // Игнорируем нерелевантные логи\r\n    }\r\n  }\r\n  \r\n  if (!eventFound) {\r\n    throw new Error(`Event Staked with parameters (${userName}, ${amount}) not found`);\r\n  }\r\n});\r\n\r\nGiven('Контракт активен', async function () {\r\n  const isPaused = await this.contract.paused();\r\n  \r\n  if (isPaused) {\r\n    await sendTransaction(\r\n      this.admin,\r\n      this.contract,\r\n      'setPaused',\r\n      [false]\r\n    );\r\n  }\r\n  \r\n  expect(await this.contract.paused()).to.be.false;\r\n});\r\n\r\nThen('Транзакция отменена с ошибкой {string}', function (errorMessage) {\r\n  expect(this.lastError).to.not.be.undefined;\r\n  \r\n  // Обновляем ожидаемое сообщение об ошибке\r\n  const expectedMessages = {\r\n    \"Operations paused\": \"Contract is paused\",\r\n    \"Amount must be > 0\": \"Amount must be > 0\",\r\n    \"Access denied: Only Student/Professor\": \"Access denied: Only Student/Professor\",\r\n    \"Exceeds max stake\": \"Exceeds max stake\"\r\n  };\r\n  \r\n  const expectedError = expectedMessages[errorMessage] || errorMessage;\r\n  \r\n  if (!this.lastError.message.includes(expectedError)) {\r\n    throw new Error(`Expected error \"${expectedError}\" but got \"${this.lastError.message}\"`);\r\n  }\r\n});\r\n\r\nThen('успешно', function () {\r\n  expect(this.lastError).to.be.oneOf([null, undefined]);\r\n});\r\n\r\nThen('ошибка', function () {\r\n  expect(this.lastError).to.not.be.oneOf([null, undefined]);\r\n});\r\n\r\n// Обновить шаг проверки сообщения об ошибке\r\nThen('сообщение об ошибке содержит {string}', function (errorMessage) {\r\n  if (errorMessage === '') {\r\n    // Для пустого сообщения - ошибки не должно быть\r\n    expect(this.lastError).to.be.oneOf([null, undefined]);\r\n  } else {\r\n    // Для непустого сообщения - должна быть ошибка\r\n    expect(this.lastError).to.not.be.oneOf([null, undefined]);\r\n    expect(this.lastError.message).to.include(errorMessage);\r\n  }\r\n});\r\n\r\n// Добавить этот шаг обратно\r\nThen('Событие Staked эмитируется с параметрами \\\\(alice, {int})', async function (amount) {\r\n  const amountWei = ethers.parseEther(amount.toString());\r\n  const receipt = await this.lastTx.wait();\r\n  \r\n  let eventFound = false;\r\n  for (const log of receipt.logs) {\r\n    try {\r\n      const event = this.contract.interface.parseLog(log);\r\n      if (event.name === \"Staked\" && \r\n          event.args.user === this.alice.address && \r\n          event.args.amount == amountWei) {\r\n        eventFound = true;\r\n        break;\r\n      }\r\n    } catch (e) {\r\n      // Игнорируем нерелевантные логи\r\n    }\r\n  }\r\n  \r\n  if (!eventFound) {\r\n    throw new Error(`Event Staked with parameters (alice, ${amount}) not found`);\r\n  }\r\n});"],"mappings":"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","ignoreList":[]}},"mtime":1753429062160},"{\"assumptions\":{},\"sourceRoot\":\"/home/serge/blockchain-lab2/lab6/features/step_definitions/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/serge/blockchain-lab2/lab6\",\"filename\":\"/home/serge/blockchain-lab2/lab6/features/step_definitions/nft_steps.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/serge/blockchain-lab2/lab6\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-explicit-resource-management\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"BlockStatement\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regexp-modifiers\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$3\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$4\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$5\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$6\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$7\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$8\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$9\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$10\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$11\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$12\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$16\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$17\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.28.0:development":{"value":{"code":"\"use strict\";\n\nfunction _interopRequireWildcard(e, t) { if (\"function\" == typeof WeakMap) var r = new WeakMap(), n = new WeakMap(); return (_interopRequireWildcard = function (e, t) { if (!t && e && e.__esModule) return e; var o, i, f = { __proto__: null, default: e }; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return f; if (o = t ? n : r) { if (o.has(e)) return o.get(e); o.set(e, f); } for (const t in e) \"default\" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]); return f; })(e, t); }\nconst {\n  Given,\n  When,\n  Then,\n  Before,\n  After\n} = require('@cucumber/cucumber');\nconst {\n  ethers\n} = require('ethers');\nconst {\n  expect\n} = require('chai');\nconst sinon = require('sinon');\nconst ganache = require('ganache');\nconst path = require('path');\nconst fs = require('fs');\n//const AchievementNFT = require('../../artifacts/AchievementNFT.json');\nconst stakingArtifactPath = path.join(__dirname, '../../artifacts/AchievementNFT.json');\nconst nftArtifact = JSON.parse(fs.readFileSync(stakingArtifactPath, 'utf8'));\n\n// Global variables\nlet provider;\nlet server = null;\nlet accounts;\nlet nftContract;\n\n// Unified IPFS client\nconst getIpfsClient = async () => {\n  if (process.argv.includes('--require-module') || process.argv.includes('@babel/register')) {\n    return {\n      add: () => Promise.resolve({\n        cid: 'QmMockCID'\n      }),\n      pin: {\n        ls: () => Promise.resolve([])\n      }\n    };\n  }\n  try {\n    const {\n      create\n    } = await Promise.resolve().then(() => _interopRequireWildcard(require('ipfs-http-client')));\n    return create({\n      host: process.env.IPFS_HOST || 'localhost',\n      port: 5001,\n      protocol: 'http'\n    });\n  } catch (e) {\n    console.error('IPFS client error:', e);\n    return {\n      add: () => Promise.reject('IPFS not available'),\n      pin: {\n        ls: () => Promise.reject('IPFS not available')\n      }\n    };\n  }\n};\n\n// Step definitions\nGiven('I have an IPFS client', async function () {\n  this.ipfs = await getIpfsClient();\n});\nWhen('I add a file to IPFS', async function () {\n  const content = Buffer.from('test content');\n  const result = await this.ipfs.add(content);\n  this.cid = result.cid.toString();\n});\nThen('I should get a valid CID', function () {\n  expect(this.cid).to.match(/Qm[a-zA-Z0-9]{44}/);\n});\n// Используем Before и After с большой буквы (как импортировано)\n// В начале хука Before\n//const { getPort } = require('../support/hooks');\n\n// В начале хука Before\n\nBefore(async function () {\n  // Развертываем NFT контракт\n  const factory = new ethers.ContractFactory(nftArtifact.abi, nftArtifact.bytecode, this.admin // Используем admin из educhain_staking_steps.js\n  );\n  this.nftContract = await factory.deploy();\n  await this.nftContract.waitForDeployment();\n  this.nftContractAddress = await this.nftContract.getAddress();\n\n  // Инициализируем пользовательский адрес\n  this.userAddress = \"0x1234567890123456789012345678901234567890\";\n  console.log(`EduAchievementNFT deployed to: ${this.nftContractAddress}`);\n});\nAfter(async function () {\n  if (this.server) {\n    await this.server.close();\n  }\n});\nGiven('User {string} completes course {string}', function (userAddress, courseName) {\n  this.userAddress = userAddress;\n  this.courseId = 101;\n});\nWhen('System mints achievement NFT', async function () {\n  // Get accounts using v6 syntax\n  const accounts = await this.provider.listAccounts();\n\n  // Get signer for the first account\n  const owner = this.provider.getSigner(accounts[0]);\n\n  // Generate tokenId with v6 methods\n  const tokenId = ethers.keccak256(ethers.AbiCoder.defaultAbiCoder().encode(['address', 'string'], [this.userAddress, this.courseName]));\n\n  // Connect to contract\n  const contract = new ethers.Contract(this.nftContract.address, this.nftContract.abi, owner);\n\n  // Mint NFT\n  await contract.mint(this.userAddress, tokenId);\n\n  // Store for later steps\n  this.tokenId = tokenId;\n});\nThen('Metadata should be pinned to IPFS', async function () {\n  try {\n    if (this.ipfs.pin) {\n      const pinned = await this.ipfs.pin.ls();\n      const isPinned = [...pinned].some(p => p.cid === this.expectedCid);\n      expect(isPinned).to.be.true;\n    } else {\n      console.log('Skipping IPFS pin check in mock mode');\n      expect(true).to.be.true; // Всегда проходит в mock-режиме\n    }\n  } catch (error) {\n    console.error('IPFS pin check error:', error);\n    throw error;\n  }\n});\nThen('NFT balance should be {int}', async function (expectedBalance) {\n  const balance = await nftContract.balanceOf(this.userAddress, this.courseId);\n  expect(Number(balance)).to.equal(expectedBalance);\n});\n\n// Debug logs\nconsole.log('IPFS module type:', typeof getIpfsClient);\ntry {\n  console.log('IPFS client version:', require('ipfs-http-client/package.json').version);\n} catch (e) {\n  console.log('IPFS client not available');\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["Given","When","Then","Before","After","require","ethers","expect","sinon","ganache","path","fs","stakingArtifactPath","join","__dirname","nftArtifact","JSON","parse","readFileSync","provider","server","accounts","nftContract","getIpfsClient","process","argv","includes","add","Promise","resolve","cid","pin","ls","create","then","_interopRequireWildcard","host","env","IPFS_HOST","port","protocol","e","console","error","reject","ipfs","content","Buffer","from","result","toString","to","match","factory","ContractFactory","abi","bytecode","admin","deploy","waitForDeployment","nftContractAddress","getAddress","userAddress","log","close","courseName","courseId","listAccounts","owner","getSigner","tokenId","keccak256","AbiCoder","defaultAbiCoder","encode","contract","Contract","address","mint","pinned","isPinned","some","p","expectedCid","be","true","expectedBalance","balance","balanceOf","Number","equal","version"],"sourceRoot":"/home/serge/blockchain-lab2/lab6/features/step_definitions/","sources":["nft_steps.js"],"sourcesContent":["const { Given, When, Then, Before, After } = require('@cucumber/cucumber');\r\nconst { ethers } = require('ethers');\r\nconst { expect } = require('chai');\r\nconst sinon = require('sinon');\r\nconst ganache = require('ganache');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\n//const AchievementNFT = require('../../artifacts/AchievementNFT.json');\r\nconst stakingArtifactPath = path.join(__dirname, '../../artifacts/AchievementNFT.json');\r\nconst nftArtifact = JSON.parse(fs.readFileSync(stakingArtifactPath, 'utf8'));\r\n\r\n\r\n// Global variables\r\nlet provider;\r\nlet server = null;\r\nlet accounts;\r\nlet nftContract;\r\n\r\n// Unified IPFS client\r\nconst getIpfsClient = async () => {\r\n  if (process.argv.includes('--require-module') || \r\n      process.argv.includes('@babel/register')) {\r\n    return {\r\n      add: () => Promise.resolve({ cid: 'QmMockCID' }),\r\n      pin: {\r\n        ls: () => Promise.resolve([])\r\n      }\r\n    };\r\n  }\r\n  \r\n  try {\r\n    const { create } = await import('ipfs-http-client');\r\n    return create({\r\n      host: process.env.IPFS_HOST || 'localhost',\r\n      port: 5001,\r\n      protocol: 'http'\r\n    });\r\n  } catch (e) {\r\n    console.error('IPFS client error:', e);\r\n    return {\r\n      add: () => Promise.reject('IPFS not available'),\r\n      pin: {\r\n        ls: () => Promise.reject('IPFS not available')\r\n      }\r\n    };\r\n  }\r\n};\r\n\r\n// Step definitions\r\nGiven('I have an IPFS client', async function() {\r\n  this.ipfs = await getIpfsClient();\r\n});\r\n\r\nWhen('I add a file to IPFS', async function() {\r\n  const content = Buffer.from('test content');\r\n  const result = await this.ipfs.add(content);\r\n  this.cid = result.cid.toString();\r\n});\r\n\r\nThen('I should get a valid CID', function() {\r\n  expect(this.cid).to.match(/Qm[a-zA-Z0-9]{44}/);\r\n});\r\n// Используем Before и After с большой буквы (как импортировано)\r\n// В начале хука Before\r\n//const { getPort } = require('../support/hooks');\r\n\r\n// В начале хука Before\r\n\r\nBefore(async function () {\r\n  // Развертываем NFT контракт\r\n  const factory = new ethers.ContractFactory(\r\n    nftArtifact.abi,\r\n    nftArtifact.bytecode,\r\n    this.admin // Используем admin из educhain_staking_steps.js\r\n  );\r\n  \r\n  this.nftContract = await factory.deploy();\r\n  await this.nftContract.waitForDeployment();\r\n  this.nftContractAddress = await this.nftContract.getAddress();\r\n  \r\n  // Инициализируем пользовательский адрес\r\n  this.userAddress = \"0x1234567890123456789012345678901234567890\";\r\n  \r\n  console.log(`EduAchievementNFT deployed to: ${this.nftContractAddress}`);\r\n});\r\n\r\nAfter(async function() {\r\n  if (this.server) {\r\n    await this.server.close();\r\n  }\r\n});\r\n\r\n\r\nGiven('User {string} completes course {string}', function(userAddress, courseName) {\r\n  this.userAddress = userAddress;\r\n  this.courseId = 101;\r\n});\r\n\r\nWhen('System mints achievement NFT', async function () {\r\n  // Get accounts using v6 syntax\r\n  const accounts = await this.provider.listAccounts();\r\n  \r\n  // Get signer for the first account\r\n  const owner = this.provider.getSigner(accounts[0]);\r\n  \r\n  // Generate tokenId with v6 methods\r\n  const tokenId = ethers.keccak256(\r\n    ethers.AbiCoder.defaultAbiCoder().encode(\r\n      ['address', 'string'],\r\n      [this.userAddress, this.courseName]\r\n    )\r\n  );\r\n\r\n  // Connect to contract\r\n  const contract = new ethers.Contract(\r\n    this.nftContract.address,\r\n    this.nftContract.abi,\r\n    owner\r\n  );\r\n\r\n  // Mint NFT\r\n  await contract.mint(this.userAddress, tokenId);\r\n  \r\n  // Store for later steps\r\n  this.tokenId = tokenId;\r\n});\r\n\r\nThen('Metadata should be pinned to IPFS', async function() {\r\n  try {\r\n    if (this.ipfs.pin) {\r\n      const pinned = await this.ipfs.pin.ls();\r\n      const isPinned = [...pinned].some(p => p.cid === this.expectedCid);\r\n      expect(isPinned).to.be.true;\r\n    } else {\r\n      console.log('Skipping IPFS pin check in mock mode');\r\n      expect(true).to.be.true; // Всегда проходит в mock-режиме\r\n    }\r\n  } catch (error) {\r\n    console.error('IPFS pin check error:', error);\r\n    throw error;\r\n  }\r\n});\r\n\r\nThen('NFT balance should be {int}', async function(expectedBalance) {\r\n  const balance = await nftContract.balanceOf(this.userAddress, this.courseId);\r\n  expect(Number(balance)).to.equal(expectedBalance);\r\n});\r\n\r\n\r\n// Debug logs\r\nconsole.log('IPFS module type:', typeof getIpfsClient);\r\ntry {\r\n  console.log('IPFS client version:', require('ipfs-http-client/package.json').version);\r\n} catch (e) {\r\n  console.log('IPFS client not available');\r\n}"],"mappings":"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","ignoreList":[]}},"mtime":1753421266426},"{\"assumptions\":{},\"sourceRoot\":\"/home/serge/blockchain-lab2/lab6/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/serge/blockchain-lab2/lab6\",\"filename\":\"/home/serge/blockchain-lab2/lab6/helpers.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/serge/blockchain-lab2/lab6\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-explicit-resource-management\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"BlockStatement\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regexp-modifiers\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$3\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$4\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$5\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$6\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$7\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$8\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$9\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$10\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$11\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$12\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$16\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$17\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.28.0:development":{"value":{"code":"\"use strict\";\n\nconst path = require('path');\nconst fs = require('fs');\nfunction loadArtifact(contractName) {\n  // Пробуем найти артефакт в разных местах\n  const paths = [\n  // Для Hardhat\n  path.join(__dirname, `../artifacts/${contractName}.json`),\n  // Для Foundry\n  path.join(__dirname, `../out/${contractName}.sol/${contractName}.json`),\n  // Альтернативные пути\n  path.join(__dirname, `../../artifacts/contracts/${contractName}.sol/${contractName}.json`), path.join(__dirname, `../../out/${contractName}.sol/${contractName}.json`)];\n  for (const artifactPath of paths) {\n    if (fs.existsSync(artifactPath)) {\n      const artifact = JSON.parse(fs.readFileSync(artifactPath, 'utf8'));\n      return {\n        abi: artifact.abi,\n        bytecode: artifact.bytecode\n      };\n    }\n  }\n  throw new Error(`Artifact for ${contractName} not found in any location`);\n}\nmodule.exports = {\n  loadArtifact\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJwYXRoIiwicmVxdWlyZSIsImZzIiwibG9hZEFydGlmYWN0IiwiY29udHJhY3ROYW1lIiwicGF0aHMiLCJqb2luIiwiX19kaXJuYW1lIiwiYXJ0aWZhY3RQYXRoIiwiZXhpc3RzU3luYyIsImFydGlmYWN0IiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwiYWJpIiwiYnl0ZWNvZGUiLCJFcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6Ii9ob21lL3NlcmdlL2Jsb2NrY2hhaW4tbGFiMi9sYWI2LyIsInNvdXJjZXMiOlsiaGVscGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xyXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XHJcblxyXG5mdW5jdGlvbiBsb2FkQXJ0aWZhY3QoY29udHJhY3ROYW1lKSB7XHJcbiAgLy8g0J/RgNC+0LHRg9C10Lwg0L3QsNC50YLQuCDQsNGA0YLQtdGE0LDQutGCINCyINGA0LDQt9C90YvRhSDQvNC10YHRgtCw0YVcclxuICBjb25zdCBwYXRocyA9IFtcclxuICAgIC8vINCU0LvRjyBIYXJkaGF0XHJcbiAgICBwYXRoLmpvaW4oX19kaXJuYW1lLCBgLi4vYXJ0aWZhY3RzLyR7Y29udHJhY3ROYW1lfS5qc29uYCksXHJcbiAgICAvLyDQlNC70Y8gRm91bmRyeVxyXG4gICAgcGF0aC5qb2luKF9fZGlybmFtZSwgYC4uL291dC8ke2NvbnRyYWN0TmFtZX0uc29sLyR7Y29udHJhY3ROYW1lfS5qc29uYCksXHJcbiAgICAvLyDQkNC70YzRgtC10YDQvdCw0YLQuNCy0L3Ri9C1INC/0YPRgtC4XHJcbiAgICBwYXRoLmpvaW4oX19kaXJuYW1lLCBgLi4vLi4vYXJ0aWZhY3RzL2NvbnRyYWN0cy8ke2NvbnRyYWN0TmFtZX0uc29sLyR7Y29udHJhY3ROYW1lfS5qc29uYCksXHJcbiAgICBwYXRoLmpvaW4oX19kaXJuYW1lLCBgLi4vLi4vb3V0LyR7Y29udHJhY3ROYW1lfS5zb2wvJHtjb250cmFjdE5hbWV9Lmpzb25gKSxcclxuICBdO1xyXG5cclxuICBmb3IgKGNvbnN0IGFydGlmYWN0UGF0aCBvZiBwYXRocykge1xyXG4gICAgaWYgKGZzLmV4aXN0c1N5bmMoYXJ0aWZhY3RQYXRoKSkge1xyXG4gICAgICBjb25zdCBhcnRpZmFjdCA9IEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKGFydGlmYWN0UGF0aCwgJ3V0ZjgnKSk7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgYWJpOiBhcnRpZmFjdC5hYmksXHJcbiAgICAgICAgYnl0ZWNvZGU6IGFydGlmYWN0LmJ5dGVjb2RlLFxyXG4gICAgICB9O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdGhyb3cgbmV3IEVycm9yKGBBcnRpZmFjdCBmb3IgJHtjb250cmFjdE5hbWV9IG5vdCBmb3VuZCBpbiBhbnkgbG9jYXRpb25gKTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7IGxvYWRBcnRpZmFjdCB9OyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDNUIsTUFBTUMsRUFBRSxHQUFHRCxPQUFPLENBQUMsSUFBSSxDQUFDO0FBRXhCLFNBQVNFLFlBQVlBLENBQUNDLFlBQVksRUFBRTtFQUNsQztFQUNBLE1BQU1DLEtBQUssR0FBRztFQUNaO0VBQ0FMLElBQUksQ0FBQ00sSUFBSSxDQUFDQyxTQUFTLEVBQUUsZ0JBQWdCSCxZQUFZLE9BQU8sQ0FBQztFQUN6RDtFQUNBSixJQUFJLENBQUNNLElBQUksQ0FBQ0MsU0FBUyxFQUFFLFVBQVVILFlBQVksUUFBUUEsWUFBWSxPQUFPLENBQUM7RUFDdkU7RUFDQUosSUFBSSxDQUFDTSxJQUFJLENBQUNDLFNBQVMsRUFBRSw2QkFBNkJILFlBQVksUUFBUUEsWUFBWSxPQUFPLENBQUMsRUFDMUZKLElBQUksQ0FBQ00sSUFBSSxDQUFDQyxTQUFTLEVBQUUsYUFBYUgsWUFBWSxRQUFRQSxZQUFZLE9BQU8sQ0FBQyxDQUMzRTtFQUVELEtBQUssTUFBTUksWUFBWSxJQUFJSCxLQUFLLEVBQUU7SUFDaEMsSUFBSUgsRUFBRSxDQUFDTyxVQUFVLENBQUNELFlBQVksQ0FBQyxFQUFFO01BQy9CLE1BQU1FLFFBQVEsR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUNWLEVBQUUsQ0FBQ1csWUFBWSxDQUFDTCxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUM7TUFDbEUsT0FBTztRQUNMTSxHQUFHLEVBQUVKLFFBQVEsQ0FBQ0ksR0FBRztRQUNqQkMsUUFBUSxFQUFFTCxRQUFRLENBQUNLO01BQ3JCLENBQUM7SUFDSDtFQUNGO0VBRUEsTUFBTSxJQUFJQyxLQUFLLENBQUMsZ0JBQWdCWixZQUFZLDRCQUE0QixDQUFDO0FBQzNFO0FBRUFhLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0VBQUVmO0FBQWEsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["path","require","fs","loadArtifact","contractName","paths","join","__dirname","artifactPath","existsSync","artifact","JSON","parse","readFileSync","abi","bytecode","Error","module","exports"],"sourceRoot":"/home/serge/blockchain-lab2/lab6/","sources":["helpers.js"],"sourcesContent":["const path = require('path');\r\nconst fs = require('fs');\r\n\r\nfunction loadArtifact(contractName) {\r\n  // Пробуем найти артефакт в разных местах\r\n  const paths = [\r\n    // Для Hardhat\r\n    path.join(__dirname, `../artifacts/${contractName}.json`),\r\n    // Для Foundry\r\n    path.join(__dirname, `../out/${contractName}.sol/${contractName}.json`),\r\n    // Альтернативные пути\r\n    path.join(__dirname, `../../artifacts/contracts/${contractName}.sol/${contractName}.json`),\r\n    path.join(__dirname, `../../out/${contractName}.sol/${contractName}.json`),\r\n  ];\r\n\r\n  for (const artifactPath of paths) {\r\n    if (fs.existsSync(artifactPath)) {\r\n      const artifact = JSON.parse(fs.readFileSync(artifactPath, 'utf8'));\r\n      return {\r\n        abi: artifact.abi,\r\n        bytecode: artifact.bytecode,\r\n      };\r\n    }\r\n  }\r\n\r\n  throw new Error(`Artifact for ${contractName} not found in any location`);\r\n}\r\n\r\nmodule.exports = { loadArtifact };"],"mappings":";;AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;AAExB,SAASE,YAAYA,CAACC,YAAY,EAAE;EAClC;EACA,MAAMC,KAAK,GAAG;EACZ;EACAL,IAAI,CAACM,IAAI,CAACC,SAAS,EAAE,gBAAgBH,YAAY,OAAO,CAAC;EACzD;EACAJ,IAAI,CAACM,IAAI,CAACC,SAAS,EAAE,UAAUH,YAAY,QAAQA,YAAY,OAAO,CAAC;EACvE;EACAJ,IAAI,CAACM,IAAI,CAACC,SAAS,EAAE,6BAA6BH,YAAY,QAAQA,YAAY,OAAO,CAAC,EAC1FJ,IAAI,CAACM,IAAI,CAACC,SAAS,EAAE,aAAaH,YAAY,QAAQA,YAAY,OAAO,CAAC,CAC3E;EAED,KAAK,MAAMI,YAAY,IAAIH,KAAK,EAAE;IAChC,IAAIH,EAAE,CAACO,UAAU,CAACD,YAAY,CAAC,EAAE;MAC/B,MAAME,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACV,EAAE,CAACW,YAAY,CAACL,YAAY,EAAE,MAAM,CAAC,CAAC;MAClE,OAAO;QACLM,GAAG,EAAEJ,QAAQ,CAACI,GAAG;QACjBC,QAAQ,EAAEL,QAAQ,CAACK;MACrB,CAAC;IACH;EACF;EAEA,MAAM,IAAIC,KAAK,CAAC,gBAAgBZ,YAAY,4BAA4B,CAAC;AAC3E;AAEAa,MAAM,CAACC,OAAO,GAAG;EAAEf;AAAa,CAAC","ignoreList":[]}},"mtime":1753429325761},"{\"assumptions\":{},\"sourceRoot\":\"/home/serge/blockchain-lab2/lab6/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/serge/blockchain-lab2/lab6\",\"filename\":\"/home/serge/blockchain-lab2/lab6/helpers.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/serge/blockchain-lab2/lab6\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-explicit-resource-management\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"BlockStatement\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regexp-modifiers\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$3\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$4\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$5\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$6\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$7\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$8\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$9\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$10\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$11\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$12\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$16\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/lab6/node_modules/@babel/preset-env/lib/index.js$17\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.28.0:development":{"value":{"code":"\"use strict\";\n\nconst path = require('path');\nconst fs = require('fs');\nfunction loadArtifact(contractName) {\n  // Пробуем найти артефакт в разных местах\n  const paths = [\n  // Для Hardhat\n  path.join(__dirname, `../artifacts/${contractName}.json`),\n  // Для Foundry\n  path.join(__dirname, `../out/${contractName}.sol/${contractName}.json`),\n  // Альтернативные пути\n  path.join(__dirname, `../../artifacts/contracts/${contractName}.sol/${contractName}.json`), path.join(__dirname, `../../out/${contractName}.sol/${contractName}.json`)];\n  for (const artifactPath of paths) {\n    if (fs.existsSync(artifactPath)) {\n      const artifact = JSON.parse(fs.readFileSync(artifactPath, 'utf8'));\n      return {\n        abi: artifact.abi,\n        bytecode: artifact.bytecode\n      };\n    }\n  }\n  throw new Error(`Artifact for ${contractName} not found in any location`);\n}\nmodule.exports = {\n  loadArtifact\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJwYXRoIiwicmVxdWlyZSIsImZzIiwibG9hZEFydGlmYWN0IiwiY29udHJhY3ROYW1lIiwicGF0aHMiLCJqb2luIiwiX19kaXJuYW1lIiwiYXJ0aWZhY3RQYXRoIiwiZXhpc3RzU3luYyIsImFydGlmYWN0IiwiSlNPTiIsInBhcnNlIiwicmVhZEZpbGVTeW5jIiwiYWJpIiwiYnl0ZWNvZGUiLCJFcnJvciIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6Ii9ob21lL3NlcmdlL2Jsb2NrY2hhaW4tbGFiMi9sYWI2LyIsInNvdXJjZXMiOlsiaGVscGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xyXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XHJcblxyXG5mdW5jdGlvbiBsb2FkQXJ0aWZhY3QoY29udHJhY3ROYW1lKSB7XHJcbiAgLy8g0J/RgNC+0LHRg9C10Lwg0L3QsNC50YLQuCDQsNGA0YLQtdGE0LDQutGCINCyINGA0LDQt9C90YvRhSDQvNC10YHRgtCw0YVcclxuICBjb25zdCBwYXRocyA9IFtcclxuICAgIC8vINCU0LvRjyBIYXJkaGF0XHJcbiAgICBwYXRoLmpvaW4oX19kaXJuYW1lLCBgLi4vYXJ0aWZhY3RzLyR7Y29udHJhY3ROYW1lfS5qc29uYCksXHJcbiAgICAvLyDQlNC70Y8gRm91bmRyeVxyXG4gICAgcGF0aC5qb2luKF9fZGlybmFtZSwgYC4uL291dC8ke2NvbnRyYWN0TmFtZX0uc29sLyR7Y29udHJhY3ROYW1lfS5qc29uYCksXHJcbiAgICAvLyDQkNC70YzRgtC10YDQvdCw0YLQuNCy0L3Ri9C1INC/0YPRgtC4XHJcbiAgICBwYXRoLmpvaW4oX19kaXJuYW1lLCBgLi4vLi4vYXJ0aWZhY3RzL2NvbnRyYWN0cy8ke2NvbnRyYWN0TmFtZX0uc29sLyR7Y29udHJhY3ROYW1lfS5qc29uYCksXHJcbiAgICBwYXRoLmpvaW4oX19kaXJuYW1lLCBgLi4vLi4vb3V0LyR7Y29udHJhY3ROYW1lfS5zb2wvJHtjb250cmFjdE5hbWV9Lmpzb25gKSxcclxuICBdO1xyXG5cclxuICBmb3IgKGNvbnN0IGFydGlmYWN0UGF0aCBvZiBwYXRocykge1xyXG4gICAgaWYgKGZzLmV4aXN0c1N5bmMoYXJ0aWZhY3RQYXRoKSkge1xyXG4gICAgICBjb25zdCBhcnRpZmFjdCA9IEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKGFydGlmYWN0UGF0aCwgJ3V0ZjgnKSk7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgYWJpOiBhcnRpZmFjdC5hYmksXHJcbiAgICAgICAgYnl0ZWNvZGU6IGFydGlmYWN0LmJ5dGVjb2RlLFxyXG4gICAgICB9O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdGhyb3cgbmV3IEVycm9yKGBBcnRpZmFjdCBmb3IgJHtjb250cmFjdE5hbWV9IG5vdCBmb3VuZCBpbiBhbnkgbG9jYXRpb25gKTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7IGxvYWRBcnRpZmFjdCB9OyJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNQSxJQUFJLEdBQUdDLE9BQU8sQ0FBQyxNQUFNLENBQUM7QUFDNUIsTUFBTUMsRUFBRSxHQUFHRCxPQUFPLENBQUMsSUFBSSxDQUFDO0FBRXhCLFNBQVNFLFlBQVlBLENBQUNDLFlBQVksRUFBRTtFQUNsQztFQUNBLE1BQU1DLEtBQUssR0FBRztFQUNaO0VBQ0FMLElBQUksQ0FBQ00sSUFBSSxDQUFDQyxTQUFTLEVBQUUsZ0JBQWdCSCxZQUFZLE9BQU8sQ0FBQztFQUN6RDtFQUNBSixJQUFJLENBQUNNLElBQUksQ0FBQ0MsU0FBUyxFQUFFLFVBQVVILFlBQVksUUFBUUEsWUFBWSxPQUFPLENBQUM7RUFDdkU7RUFDQUosSUFBSSxDQUFDTSxJQUFJLENBQUNDLFNBQVMsRUFBRSw2QkFBNkJILFlBQVksUUFBUUEsWUFBWSxPQUFPLENBQUMsRUFDMUZKLElBQUksQ0FBQ00sSUFBSSxDQUFDQyxTQUFTLEVBQUUsYUFBYUgsWUFBWSxRQUFRQSxZQUFZLE9BQU8sQ0FBQyxDQUMzRTtFQUVELEtBQUssTUFBTUksWUFBWSxJQUFJSCxLQUFLLEVBQUU7SUFDaEMsSUFBSUgsRUFBRSxDQUFDTyxVQUFVLENBQUNELFlBQVksQ0FBQyxFQUFFO01BQy9CLE1BQU1FLFFBQVEsR0FBR0MsSUFBSSxDQUFDQyxLQUFLLENBQUNWLEVBQUUsQ0FBQ1csWUFBWSxDQUFDTCxZQUFZLEVBQUUsTUFBTSxDQUFDLENBQUM7TUFDbEUsT0FBTztRQUNMTSxHQUFHLEVBQUVKLFFBQVEsQ0FBQ0ksR0FBRztRQUNqQkMsUUFBUSxFQUFFTCxRQUFRLENBQUNLO01BQ3JCLENBQUM7SUFDSDtFQUNGO0VBRUEsTUFBTSxJQUFJQyxLQUFLLENBQUMsZ0JBQWdCWixZQUFZLDRCQUE0QixDQUFDO0FBQzNFO0FBRUFhLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0VBQUVmO0FBQWEsQ0FBQyIsImlnbm9yZUxpc3QiOltdfQ==","map":{"version":3,"names":["path","require","fs","loadArtifact","contractName","paths","join","__dirname","artifactPath","existsSync","artifact","JSON","parse","readFileSync","abi","bytecode","Error","module","exports"],"sourceRoot":"/home/serge/blockchain-lab2/lab6/","sources":["helpers.js"],"sourcesContent":["const path = require('path');\r\nconst fs = require('fs');\r\n\r\nfunction loadArtifact(contractName) {\r\n  // Пробуем найти артефакт в разных местах\r\n  const paths = [\r\n    // Для Hardhat\r\n    path.join(__dirname, `../artifacts/${contractName}.json`),\r\n    // Для Foundry\r\n    path.join(__dirname, `../out/${contractName}.sol/${contractName}.json`),\r\n    // Альтернативные пути\r\n    path.join(__dirname, `../../artifacts/contracts/${contractName}.sol/${contractName}.json`),\r\n    path.join(__dirname, `../../out/${contractName}.sol/${contractName}.json`),\r\n  ];\r\n\r\n  for (const artifactPath of paths) {\r\n    if (fs.existsSync(artifactPath)) {\r\n      const artifact = JSON.parse(fs.readFileSync(artifactPath, 'utf8'));\r\n      return {\r\n        abi: artifact.abi,\r\n        bytecode: artifact.bytecode,\r\n      };\r\n    }\r\n  }\r\n\r\n  throw new Error(`Artifact for ${contractName} not found in any location`);\r\n}\r\n\r\nmodule.exports = { loadArtifact };"],"mappings":";;AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMC,EAAE,GAAGD,OAAO,CAAC,IAAI,CAAC;AAExB,SAASE,YAAYA,CAACC,YAAY,EAAE;EAClC;EACA,MAAMC,KAAK,GAAG;EACZ;EACAL,IAAI,CAACM,IAAI,CAACC,SAAS,EAAE,gBAAgBH,YAAY,OAAO,CAAC;EACzD;EACAJ,IAAI,CAACM,IAAI,CAACC,SAAS,EAAE,UAAUH,YAAY,QAAQA,YAAY,OAAO,CAAC;EACvE;EACAJ,IAAI,CAACM,IAAI,CAACC,SAAS,EAAE,6BAA6BH,YAAY,QAAQA,YAAY,OAAO,CAAC,EAC1FJ,IAAI,CAACM,IAAI,CAACC,SAAS,EAAE,aAAaH,YAAY,QAAQA,YAAY,OAAO,CAAC,CAC3E;EAED,KAAK,MAAMI,YAAY,IAAIH,KAAK,EAAE;IAChC,IAAIH,EAAE,CAACO,UAAU,CAACD,YAAY,CAAC,EAAE;MAC/B,MAAME,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACV,EAAE,CAACW,YAAY,CAACL,YAAY,EAAE,MAAM,CAAC,CAAC;MAClE,OAAO;QACLM,GAAG,EAAEJ,QAAQ,CAACI,GAAG;QACjBC,QAAQ,EAAEL,QAAQ,CAACK;MACrB,CAAC;IACH;EACF;EAEA,MAAM,IAAIC,KAAK,CAAC,gBAAgBZ,YAAY,4BAA4B,CAAC;AAC3E;AAEAa,MAAM,CAACC,OAAO,GAAG;EAAEf;AAAa,CAAC","ignoreList":[]}},"mtime":1753429325761}}