{"{\"assumptions\":{},\"sourceRoot\":\"/home/serge/blockchain-lab2/lab3/features/step_definitions/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/serge/blockchain-lab2/lab3\",\"filename\":\"/home/serge/blockchain-lab2/lab3/features/step_definitions/educhain_staking_steps.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/serge/blockchain-lab2/lab3\",\"rootMode\":\"root\",\"plugins\":[{\"key\":\"transform-explicit-resource-management\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"BlockStatement\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-duplicate-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-regexp-modifiers\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/node_modules/@babel/preset-env/lib/index.js$3\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/node_modules/@babel/preset-env/lib/index.js$4\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/node_modules/@babel/preset-env/lib/index.js$5\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/node_modules/@babel/preset-env/lib/index.js$6\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/node_modules/@babel/preset-env/lib/index.js$7\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/node_modules/@babel/preset-env/lib/index.js$8\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/node_modules/@babel/preset-env/lib/index.js$9\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/node_modules/@babel/preset-env/lib/index.js$10\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/node_modules/@babel/preset-env/lib/index.js$11\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/node_modules/@babel/preset-env/lib/index.js$12\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-export-namespace-from\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"CallExpression\":{\"enter\":[null]},\"ImportExpression\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"transform-dynamic-import\",\"visitor\":{\"Program\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/node_modules/@babel/preset-env/lib/index.js$16\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]},{\"key\":\"/home/serge/blockchain-lab2/node_modules/@babel/preset-env/lib/index.js$17\",\"visitor\":{},\"options\":{\"spec\":false,\"useBuiltIns\":false},\"externalDependencies\":[]}],\"presets\":[]}:7.28.0:development":{"value":{"code":"\"use strict\";\n\nconst {\n  Given,\n  When,\n  Then,\n  Before\n} = require('@cucumber/cucumber');\nconst {\n  expect\n} = require('chai');\nconst {\n  ethers\n} = require(\"ethers\");\nconst fs = require('fs');\nconst path = require('path');\n\n// Глобальный объект для отслеживания nonce\nconst nonceManager = {};\nBefore(async function () {\n  // Инициализация провайдера\n  this.provider = new ethers.JsonRpcProvider(\"http://localhost:8545\");\n\n  // Получаем аккаунты\n  this.accounts = await this.provider.listAccounts();\n\n  // Приватные ключи для Anvil\n  const privateKeys = [\"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\",\n  // admin\n  \"0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d\",\n  // alice\n  \"0x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a\",\n  // bob\n  \"0x7c852118294e51e653712a81e05800f419141751be58f605c371e15141b007a6\",\n  // carol\n  \"0x47e179ec197488593b187f80a00eb0da91f1b9d0b13f8733639f19c30a34926a\" // dave\n  ];\n  this.signers = [];\n  for (let i = 0; i < privateKeys.length; i++) {\n    const wallet = new ethers.Wallet(privateKeys[i], this.provider);\n    this.signers.push(wallet);\n\n    // Инициализируем nonce для каждого аккаунта\n    nonceManager[wallet.address] = await this.provider.getTransactionCount(wallet.address, 'latest');\n  }\n\n  // Сохраняем пользователей по именам\n  this.admin = this.signers[0];\n  this.alice = this.signers[1];\n  this.bob = this.signers[2];\n  this.carol = this.signers[3];\n  this.dave = this.signers[4];\n\n  // Сброс состояния\n  this.contract = null;\n  this.lastTx = null;\n  this.lastError = null;\n});\nBefore({\n  tags: \"@requires_contract\"\n}, async function () {\n  const artifactPath = path.join(process.cwd(), 'out', 'EDUToken.sol', 'EDUToken.json');\n  const artifact = JSON.parse(fs.readFileSync(artifactPath, 'utf8'));\n  const bytecode = artifact.bytecode.object || artifact.bytecode;\n\n  // Используем nonceManager для админа\n  const nonce = nonceManager[this.admin.address];\n  const tx = await this.admin.sendTransaction({\n    data: bytecode,\n    gasLimit: 10_000_000,\n    nonce\n  });\n  const receipt = await tx.wait();\n  this.contractAddress = receipt.contractAddress;\n  nonceManager[this.admin.address]++; // Увеличиваем nonce\n\n  this.contract = new ethers.Contract(this.contractAddress, artifact.abi, this.admin);\n\n  // Инициализация хешей ролей\n  this.STUDENT_ROLE = ethers.keccak256(ethers.toUtf8Bytes(\"STUDENT_ROLE\"));\n  this.PROFESSOR_ROLE = ethers.keccak256(ethers.toUtf8Bytes(\"PROFESSOR_ROLE\"));\n  this.ADMIN_ROLE = ethers.keccak256(ethers.toUtf8Bytes(\"DEFAULT_ADMIN_ROLE\"));\n  this.INVESTOR_ROLE = ethers.keccak256(ethers.toUtf8Bytes(\"INVESTOR_ROLE\"));\n});\n\n// Общий метод для отправки транзакций с управлением nonce\nasync function sendTransaction(signer, contract, methodName, args) {\n  const address = signer.address;\n  const nonce = nonceManager[address];\n  let tx;\n  if (contract) {\n    tx = await contract.connect(signer)[methodName](...args, {\n      nonce\n    });\n  } else {\n    // Для простых транзакций (например, развертывание)\n    tx = await signer.sendTransaction({\n      ...args,\n      nonce\n    });\n  }\n  await tx.wait();\n  nonceManager[address]++; // Увеличиваем nonce после успешной транзакции\n  return tx;\n}\nGiven('Контракт не находится в состоянии паузы', async function () {\n  expect(await this.contract.paused()).to.be.false;\n});\nGiven('Пользователь {string} имеет роль {string}', async function (userName, roleName) {\n  const user = this[userName.toLowerCase()];\n  let role;\n  switch (roleName) {\n    case 'Student':\n      role = this.STUDENT_ROLE;\n      break;\n    case 'Professor':\n      role = this.PROFESSOR_ROLE;\n      break;\n    case 'Admin':\n      role = this.ADMIN_ROLE;\n      break;\n    case 'Investor':\n      role = this.INVESTOR_ROLE;\n      break;\n    default:\n      throw new Error(`Unknown role: ${roleName}`);\n  }\n  await sendTransaction(this.admin, this.contract, 'grantRole', [role, user.address]);\n});\n\n// Обновить шаги, связанные с балансом\nGiven('Кошелек {string} имеет баланс ≥ {int} EDU', async function (userName, minBalance) {\n  const user = this[userName.toLowerCase()];\n  const minBalanceWei = ethers.parseEther(String(minBalance));\n  const amount = minBalanceWei + ethers.parseEther(\"1\");\n  await sendTransaction(this.admin, this.contract, 'mint', [user.address, amount]);\n  const userBalance = await this.contract.balanceOf(user.address);\n  expect(userBalance >= minBalanceWei).to.be.true;\n});\nGiven('Администратор приостановил контракт', async function () {\n  await sendTransaction(this.admin, this.contract, 'setPaused', [true]);\n  expect(await this.contract.paused()).to.be.true;\n});\n\n// В шаге When добавить сброс ошибки\nWhen('Пользователь {string} вызывает метод stake\\\\({int})', async function (userName, amount) {\n  const user = this[userName.toLowerCase()];\n  this.lastError = null; // Сбрасываем ошибку\n  const amountWei = ethers.parseEther(amount.toString());\n  try {\n    this.lastTx = await sendTransaction(user, this.contract, 'stake', [amountWei]);\n  } catch (error) {\n    this.lastError = error;\n  }\n});\nThen('Баланс стейкинга {string} увеличивается на {int} EDU', async function (userName, amount) {\n  const user = this[userName.toLowerCase()];\n  const stakeBalance = await this.contract.getStake(user.address);\n  const amountWei = ethers.parseEther(amount.toString());\n  expect(stakeBalance).to.equal(amountWei);\n});\nThen('Баланс стейкинга {string} не изменяется', async function (userName) {\n  const user = this[userName.toLowerCase()];\n  const stakeBalance = await this.contract.getStake(user.address);\n  expect(stakeBalance).to.equal(0n); // Используем BigInt литерал 0n\n});\nThen('Событие Staked эмитируется с параметрами \\\\({string}, {int})', async function (userName, amount) {\n  const user = this[userName.toLowerCase()];\n  const amountWei = ethers.parseEther(amount.toString());\n  const receipt = await this.lastTx.wait();\n  let eventFound = false;\n  for (const log of receipt.logs) {\n    try {\n      const event = this.contract.interface.parseLog(log);\n      if (event.name === \"Staked\" && event.args.user === user.address && event.args.amount == amountWei) {\n        eventFound = true;\n        break;\n      }\n    } catch (e) {\n      // Игнорируем нерелевантные логи\n    }\n  }\n  if (!eventFound) {\n    throw new Error(`Event Staked with parameters (${userName}, ${amount}) not found`);\n  }\n});\nGiven('Контракт активен', async function () {\n  const isPaused = await this.contract.paused();\n  if (isPaused) {\n    await sendTransaction(this.admin, this.contract, 'setPaused', [false]);\n  }\n  expect(await this.contract.paused()).to.be.false;\n});\nThen('Транзакция отменена с ошибкой {string}', function (errorMessage) {\n  expect(this.lastError).to.not.be.undefined;\n\n  // Проверяем разные форматы ошибок\n  const actualError = this.lastError.message.toLowerCase();\n  const expectedError = errorMessage.toLowerCase();\n  if (!actualError.includes(expectedError)) {\n    throw new Error(`Expected error \"${errorMessage}\" but got \"${this.lastError.message}\"`);\n  }\n});\n// Исправленные шаги\nThen('успешно', function () {\n  expect(this.lastError).to.be.oneOf([null, undefined]);\n});\nThen('ошибка', function () {\n  expect(this.lastError).to.not.be.oneOf([null, undefined]);\n});\n\n// Обновить шаг проверки сообщения об ошибке\nThen('сообщение об ошибке содержит {string}', function (errorMessage) {\n  if (errorMessage === '') {\n    // Для пустого сообщения - ошибки не должно быть\n    expect(this.lastError).to.be.oneOf([null, undefined]);\n  } else {\n    // Для непустого сообщения - должна быть ошибка\n    expect(this.lastError).to.not.be.oneOf([null, undefined]);\n    expect(this.lastError.message).to.include(errorMessage);\n  }\n});\n\n// Добавить этот шаг обратно\nThen('Событие Staked эмитируется с параметрами \\\\(alice, {int})', async function (amount) {\n  const amountWei = ethers.parseEther(amount.toString());\n  const receipt = await this.lastTx.wait();\n  let eventFound = false;\n  for (const log of receipt.logs) {\n    try {\n      const event = this.contract.interface.parseLog(log);\n      if (event.name === \"Staked\" && event.args.user === this.alice.address && event.args.amount == amountWei) {\n        eventFound = true;\n        break;\n      }\n    } catch (e) {\n      // Игнорируем нерелевантные логи\n    }\n  }\n  if (!eventFound) {\n    throw new Error(`Event Staked with parameters (alice, ${amount}) not found`);\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["Given","When","Then","Before","require","expect","ethers","fs","path","nonceManager","provider","JsonRpcProvider","accounts","listAccounts","privateKeys","signers","i","length","wallet","Wallet","push","address","getTransactionCount","admin","alice","bob","carol","dave","contract","lastTx","lastError","tags","artifactPath","join","process","cwd","artifact","JSON","parse","readFileSync","bytecode","object","nonce","tx","sendTransaction","data","gasLimit","receipt","wait","contractAddress","Contract","abi","STUDENT_ROLE","keccak256","toUtf8Bytes","PROFESSOR_ROLE","ADMIN_ROLE","INVESTOR_ROLE","signer","methodName","args","connect","paused","to","be","false","userName","roleName","user","toLowerCase","role","Error","minBalance","minBalanceWei","parseEther","String","amount","userBalance","balanceOf","true","amountWei","toString","error","stakeBalance","getStake","equal","eventFound","log","logs","event","interface","parseLog","name","e","isPaused","errorMessage","not","undefined","actualError","message","expectedError","includes","oneOf","include"],"sourceRoot":"/home/serge/blockchain-lab2/lab3/features/step_definitions/","sources":["educhain_staking_steps.js"],"sourcesContent":["const { Given, When, Then, Before } = require('@cucumber/cucumber');\r\nconst { expect } = require('chai');\r\nconst { ethers } = require(\"ethers\");\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\n// Глобальный объект для отслеживания nonce\r\nconst nonceManager = {};\r\n\r\nBefore(async function () {\r\n  // Инициализация провайдера\r\n  this.provider = new ethers.JsonRpcProvider(\"http://localhost:8545\");\r\n  \r\n  // Получаем аккаунты\r\n  this.accounts = await this.provider.listAccounts();\r\n  \r\n  // Приватные ключи для Anvil\r\n  const privateKeys = [\r\n    \"0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80\", // admin\r\n    \"0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d\", // alice\r\n    \"0x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a\", // bob\r\n    \"0x7c852118294e51e653712a81e05800f419141751be58f605c371e15141b007a6\", // carol\r\n    \"0x47e179ec197488593b187f80a00eb0da91f1b9d0b13f8733639f19c30a34926a\"  // dave\r\n  ];\r\n  \r\n  this.signers = [];\r\n  for (let i = 0; i < privateKeys.length; i++) {\r\n    const wallet = new ethers.Wallet(privateKeys[i], this.provider);\r\n    this.signers.push(wallet);\r\n    \r\n    // Инициализируем nonce для каждого аккаунта\r\n    nonceManager[wallet.address] = await this.provider.getTransactionCount(wallet.address, 'latest');\r\n  }\r\n  \r\n  // Сохраняем пользователей по именам\r\n  this.admin = this.signers[0];\r\n  this.alice = this.signers[1];\r\n  this.bob = this.signers[2];\r\n  this.carol = this.signers[3];\r\n  this.dave = this.signers[4];\r\n  \r\n  // Сброс состояния\r\n  this.contract = null;\r\n  this.lastTx = null;\r\n  this.lastError = null;\r\n});\r\n\r\nBefore({ tags: \"@requires_contract\" }, async function () {\r\n  const artifactPath = path.join(process.cwd(), 'out', 'EDUToken.sol', 'EDUToken.json');\r\n  const artifact = JSON.parse(fs.readFileSync(artifactPath, 'utf8'));\r\n  const bytecode = artifact.bytecode.object || artifact.bytecode;\r\n  \r\n  // Используем nonceManager для админа\r\n  const nonce = nonceManager[this.admin.address];\r\n  \r\n  const tx = await this.admin.sendTransaction({\r\n    data: bytecode,\r\n    gasLimit: 10_000_000,\r\n    nonce\r\n  });\r\n  \r\n  const receipt = await tx.wait();\r\n  this.contractAddress = receipt.contractAddress;\r\n  nonceManager[this.admin.address]++; // Увеличиваем nonce\r\n  \r\n  this.contract = new ethers.Contract(\r\n    this.contractAddress,\r\n    artifact.abi,\r\n    this.admin\r\n  );\r\n  \r\n  // Инициализация хешей ролей\r\n  this.STUDENT_ROLE = ethers.keccak256(ethers.toUtf8Bytes(\"STUDENT_ROLE\"));\r\n  this.PROFESSOR_ROLE = ethers.keccak256(ethers.toUtf8Bytes(\"PROFESSOR_ROLE\"));\r\n  this.ADMIN_ROLE = ethers.keccak256(ethers.toUtf8Bytes(\"DEFAULT_ADMIN_ROLE\"));\r\n  this.INVESTOR_ROLE = ethers.keccak256(ethers.toUtf8Bytes(\"INVESTOR_ROLE\"));\r\n});\r\n\r\n// Общий метод для отправки транзакций с управлением nonce\r\nasync function sendTransaction(signer, contract, methodName, args) {\r\n  const address = signer.address;\r\n  const nonce = nonceManager[address];\r\n  \r\n  let tx;\r\n  if (contract) {\r\n    tx = await contract.connect(signer)[methodName](...args, { nonce });\r\n  } else {\r\n    // Для простых транзакций (например, развертывание)\r\n    tx = await signer.sendTransaction({ ...args, nonce });\r\n  }\r\n  \r\n  await tx.wait();\r\n  nonceManager[address]++; // Увеличиваем nonce после успешной транзакции\r\n  return tx;\r\n}\r\n\r\nGiven('Контракт не находится в состоянии паузы', async function () {\r\n  expect(await this.contract.paused()).to.be.false;\r\n});\r\n\r\nGiven('Пользователь {string} имеет роль {string}', async function (userName, roleName) {\r\n  const user = this[userName.toLowerCase()];\r\n  let role;\r\n  \r\n  switch(roleName) {\r\n    case 'Student': role = this.STUDENT_ROLE; break;\r\n    case 'Professor': role = this.PROFESSOR_ROLE; break;\r\n    case 'Admin': role = this.ADMIN_ROLE; break;\r\n    case 'Investor': role = this.INVESTOR_ROLE; break;\r\n    default: throw new Error(`Unknown role: ${roleName}`);\r\n  }\r\n  \r\n  await sendTransaction(\r\n    this.admin,\r\n    this.contract,\r\n    'grantRole',\r\n    [role, user.address]\r\n  );\r\n});\r\n\r\n// Обновить шаги, связанные с балансом\r\nGiven('Кошелек {string} имеет баланс ≥ {int} EDU', async function (userName, minBalance) {\r\n  const user = this[userName.toLowerCase()];\r\n  const minBalanceWei = ethers.parseEther(String(minBalance));\r\n  const amount = minBalanceWei + ethers.parseEther(\"1\");\r\n  \r\n  await sendTransaction(\r\n    this.admin,\r\n    this.contract,\r\n    'mint',\r\n    [user.address, amount]\r\n  );\r\n  \r\n  const userBalance = await this.contract.balanceOf(user.address);\r\n  expect(userBalance >= minBalanceWei).to.be.true;\r\n});\r\n\r\nGiven('Администратор приостановил контракт', async function () {\r\n  await sendTransaction(\r\n    this.admin,\r\n    this.contract,\r\n    'setPaused',\r\n    [true]\r\n  );\r\n  expect(await this.contract.paused()).to.be.true;\r\n});\r\n\r\n// В шаге When добавить сброс ошибки\r\nWhen('Пользователь {string} вызывает метод stake\\\\({int})', async function (userName, amount) {\r\n  const user = this[userName.toLowerCase()];\r\n  this.lastError = null; // Сбрасываем ошибку\r\n  const amountWei = ethers.parseEther(amount.toString());\r\n  \r\n  try {\r\n    this.lastTx = await sendTransaction(\r\n      user,\r\n      this.contract,\r\n      'stake',\r\n      [amountWei]\r\n    );\r\n  } catch (error) {\r\n    this.lastError = error;\r\n  }\r\n});\r\n\r\nThen('Баланс стейкинга {string} увеличивается на {int} EDU', async function (userName, amount) {\r\n  const user = this[userName.toLowerCase()];\r\n  const stakeBalance = await this.contract.getStake(user.address);\r\n  const amountWei = ethers.parseEther(amount.toString());\r\n  expect(stakeBalance).to.equal(amountWei);\r\n});\r\n\r\nThen('Баланс стейкинга {string} не изменяется', async function (userName) {\r\n  const user = this[userName.toLowerCase()];\r\n  const stakeBalance = await this.contract.getStake(user.address);\r\n  expect(stakeBalance).to.equal(0n); // Используем BigInt литерал 0n\r\n});\r\n\r\nThen('Событие Staked эмитируется с параметрами \\\\({string}, {int})', async function (userName, amount) {\r\n  const user = this[userName.toLowerCase()];\r\n  const amountWei = ethers.parseEther(amount.toString());\r\n  const receipt = await this.lastTx.wait();\r\n  \r\n  let eventFound = false;\r\n  for (const log of receipt.logs) {\r\n    try {\r\n      const event = this.contract.interface.parseLog(log);\r\n      if (event.name === \"Staked\" && \r\n          event.args.user === user.address && \r\n          event.args.amount == amountWei) {\r\n        eventFound = true;\r\n        break;\r\n      }\r\n    } catch (e) {\r\n      // Игнорируем нерелевантные логи\r\n    }\r\n  }\r\n  \r\n  if (!eventFound) {\r\n    throw new Error(`Event Staked with parameters (${userName}, ${amount}) not found`);\r\n  }\r\n});\r\n\r\nGiven('Контракт активен', async function () {\r\n  const isPaused = await this.contract.paused();\r\n  \r\n  if (isPaused) {\r\n    await sendTransaction(\r\n      this.admin,\r\n      this.contract,\r\n      'setPaused',\r\n      [false]\r\n    );\r\n  }\r\n  \r\n  expect(await this.contract.paused()).to.be.false;\r\n});\r\n\r\nThen('Транзакция отменена с ошибкой {string}', function (errorMessage) {\r\n  expect(this.lastError).to.not.be.undefined;\r\n  \r\n  // Проверяем разные форматы ошибок\r\n  const actualError = this.lastError.message.toLowerCase();\r\n  const expectedError = errorMessage.toLowerCase();\r\n  \r\n  if (!actualError.includes(expectedError)) {\r\n    throw new Error(`Expected error \"${errorMessage}\" but got \"${this.lastError.message}\"`);\r\n  }\r\n});\r\n// Исправленные шаги\r\nThen('успешно', function () {\r\n  expect(this.lastError).to.be.oneOf([null, undefined]);\r\n});\r\n\r\nThen('ошибка', function () {\r\n  expect(this.lastError).to.not.be.oneOf([null, undefined]);\r\n});\r\n\r\n// Обновить шаг проверки сообщения об ошибке\r\nThen('сообщение об ошибке содержит {string}', function (errorMessage) {\r\n  if (errorMessage === '') {\r\n    // Для пустого сообщения - ошибки не должно быть\r\n    expect(this.lastError).to.be.oneOf([null, undefined]);\r\n  } else {\r\n    // Для непустого сообщения - должна быть ошибка\r\n    expect(this.lastError).to.not.be.oneOf([null, undefined]);\r\n    expect(this.lastError.message).to.include(errorMessage);\r\n  }\r\n});\r\n\r\n// Добавить этот шаг обратно\r\nThen('Событие Staked эмитируется с параметрами \\\\(alice, {int})', async function (amount) {\r\n  const amountWei = ethers.parseEther(amount.toString());\r\n  const receipt = await this.lastTx.wait();\r\n  \r\n  let eventFound = false;\r\n  for (const log of receipt.logs) {\r\n    try {\r\n      const event = this.contract.interface.parseLog(log);\r\n      if (event.name === \"Staked\" && \r\n          event.args.user === this.alice.address && \r\n          event.args.amount == amountWei) {\r\n        eventFound = true;\r\n        break;\r\n      }\r\n    } catch (e) {\r\n      // Игнорируем нерелевантные логи\r\n    }\r\n  }\r\n  \r\n  if (!eventFound) {\r\n    throw new Error(`Event Staked with parameters (alice, ${amount}) not found`);\r\n  }\r\n});\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]}},"mtime":1752939735654}}